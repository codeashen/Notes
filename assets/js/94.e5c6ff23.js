(window.webpackJsonp=window.webpackJsonp||[]).push([[94],{419:function(t,s,e){"use strict";e.r(s);var a=e(4),n=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"有状态应用管理-statefulset"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#有状态应用管理-statefulset"}},[t._v("#")]),t._v(" 有状态应用管理 StatefulSet")]),t._v(" "),s("p",[t._v("StatefulSet（有状态集，缩写为 sts）常用于部署有状态的且需要有序启动的应用程序，比如在进行 SpringCloud 项目容器化时，Eureka 的部署是比较适合用 StatefulSet 部署方式的，可以给每个 Eureka 实例创建一个唯一且固定的标识符，并且每个 Eureka 实例无需配置多余的 Service，其余 SpringBoot 应用可以直接通过 Eureka 的 Headless Service 即可进行注册。")]),t._v(" "),s("p",[t._v("Eureka 的 statefulset 的资源名称是 eureka，eureka-0 eureka-1 eureka-2")]),t._v(" "),s("p",[t._v("Service：headless service，没有 ClusterIP       eureka-svc")]),t._v(" "),s("p",[t._v("Eureka-0.eureka-svc.NAMESPACE_NAME eureka-1.eureka-svc …")]),t._v(" "),s("h1",{attrs:{id:"statefulset-的基本概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#statefulset-的基本概念"}},[t._v("#")]),t._v(" StatefulSet 的基本概念")]),t._v(" "),s("p",[t._v("StatefulSet 主要用于管理有状态应用程序的工作负载 API 对象。比如在生产环境中，可以部署 ElasticSearch 集群、MongoDB 集群或者需要持久化的 RabbitMQ 集群、Redis 集群、Kafka 集群和 ZooKeeper 集群等。")]),t._v(" "),s("p",[t._v("和 Deployment 类似，一个 StatefulSet 也同样管理着基于相同容器规范的 Pod。不同的是，StatefulSet 为每个 Pod 维护了一个粘性标识。这些 Pod 是根据相同的规范创建的，但是不可互换，每个 Pod 都有一个持久的标识符，在重新调度时也会保留，一般格式为 StatefulSetName-Number。比如定义一个名字是 Redis-Sentinel 的 StatefulSet，指定创建三个 Pod，那么创建出来的Pod名字就为 Redis-Sentinel-0、Redis-Sentinel-1、Redis-Sentinel-2。而 StatefulSet 创建的 Pod 一般使用 Headless Service（无头服务）进行通信，和普通的 Service 的区别在于 Headless Service 没有 ClusterIP，它使用的是 Endpoint 进行互相通信，Headless 一般的格式为：")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("{statefulSetName}-{0..N-1}.{serviceName}.{namespace}.svc.cluster.local\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("说明：")]),t._v(" "),s("ul",[s("li",[t._v("statefulSetName 为 StatefulSet 的名字；")]),t._v(" "),s("li",[t._v(".N-1 为 Pod 所在的序号，从 0 开始到 N-1；")]),t._v(" "),s("li",[t._v("serviceName 为 Headless Service 的名字，创建 StatefulSet 时，必须指定 Headless Service 名称；")]),t._v(" "),s("li",[t._v("namespace 为服务所在的命名空间；")]),t._v(" "),s("li",[t._v(".cluster.local 为 Cluster Domain（集群域）。")])]),t._v(" "),s("p",[t._v("下面通过一个例子看下 StatefulSet 的应用场景。")]),t._v(" "),s("p",[t._v("假如公司某个项目需要在 Kubernetes 中部署一个主从模式的 Redis，此时使用 StatefulSet 部署就极为合适，因为 StatefulSet 启动时，只有当前一个容器完全启动时，后一个容器才会被调度，并且每个容器的标识符是固定的，那么就可以通过标识符来断定当前 Pod 的角色。")]),t._v(" "),s("p",[t._v("比如用一个名为 redis-ms 的 StatefulSet 部署主从架构的 Redis，第一个容器启动时，它的标识符为 redis-ms-0，并且 Pod 内主机名也为 redis-ms-0，此时就可以根据主机名来判断，当主机名为 redis-ms-0 的容器作为 Redis 的主节点，其余从节点，那么 Slave 连接 Master 主机配置就可以使用不会更改的 Master 的 Headless Service，此时 Redis 从节点（Slave）配置文件如下：")]),t._v(" "),s("div",{staticClass:"language-yaml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[t._v("port 6379\nslaveof redis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("ms"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("0.redis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("ms.public"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("service.svc.cluster.local 6379\ntcp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("backlog 511\ntimeout 0\ntcp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("keepalive 0\n……\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("p",[t._v("其中 "),s("code",[t._v("redis-ms-0.redis-ms.public-service.svc.cluster.local")]),t._v(" 是 Redis Master 的 Headless Service，"),s("strong",[t._v("在同一命名空间下只需要写 "),s("code",[t._v("redis-ms-0.redis-ms")]),t._v(" 即可，后面的 "),s("code",[t._v("public-service.svc.cluster.local")]),t._v(" 可以省略")]),t._v("。")]),t._v(" "),s("h1",{attrs:{id:"statefulset-注意事项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#statefulset-注意事项"}},[t._v("#")]),t._v(" StatefulSet 注意事项")]),t._v(" "),s("p",[t._v("一般 StatefulSet 用于有以下一个或者多个需求的应用程序：")]),t._v(" "),s("ul",[s("li",[t._v("需要稳定的独一无二的网络标识符。")]),t._v(" "),s("li",[t._v("需要持久化数据。")]),t._v(" "),s("li",[t._v("需要有序的、优雅的部署和扩展。")]),t._v(" "),s("li",[t._v("需要有序的自动滚动更新。")])]),t._v(" "),s("p",[t._v("如果应用程序不需要任何稳定的标识符或者有序的部署、删除或者扩展，应该使用无状态的控制器部署应用程序，比如 Deployment 或者 ReplicaSet。")]),t._v(" "),s("p",[t._v("Pod 所用的存储必须由 PersistentVolume Provisioner（持久化卷配置器）根据请求配置 StorageClass，或者由管理员预先配置，当然也可以不配置存储。")]),t._v(" "),s("p",[t._v("为了确保数据安全，删除和缩放 StatefulSet 不会删除与 StatefulSet 关联的卷，可以手动选择性地删除 PVC 和 PV。")]),t._v(" "),s("p",[t._v("StatefulSet 目前使用 Headless Service（无头服务）负责 Pod 的网络身份和通信，需要提前创建此服务。")]),t._v(" "),s("p",[t._v("删除一个 StatefulSet 时，不保证对 Pod 的终止，要在 StatefulSet 中实现 Pod 的有序和正常终止，可以在删除之前将 StatefulSet 的副本缩减为 0。")]),t._v(" "),s("h1",{attrs:{id:"定义一个-statefulset-资源文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#定义一个-statefulset-资源文件"}},[t._v("#")]),t._v(" 定义一个 StatefulSet 资源文件")]),t._v(" "),s("p",[t._v("定义一个简单的 StatefulSet 的示例如下：")]),t._v(" "),s("div",{staticClass:"language-yaml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#### 定义一个 Service")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Service\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" web\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("clusterIP")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" None  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置为 None，可以通过 Headless Service 访问到 sts 的 pod")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("selector")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#### 定义一个 StatefulSet")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" apps/v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" StatefulSet\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" web\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("serviceName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nginx"')]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# StatefulSet 必须要配置 serviceName，指向一个已经存在的 service")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("replicas")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("selector")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matchLabels")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("template")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" web\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br"),s("span",{staticClass:"line-number"},[t._v("32")]),s("br"),s("span",{staticClass:"line-number"},[t._v("33")]),s("br"),s("span",{staticClass:"line-number"},[t._v("34")]),s("br"),s("span",{staticClass:"line-number"},[t._v("35")]),s("br"),s("span",{staticClass:"line-number"},[t._v("36")]),s("br"),s("span",{staticClass:"line-number"},[t._v("37")]),s("br")])]),s("blockquote",[s("p",[s("em",[t._v("此示例没有添加存储配置，后面的章节会单独讲解存储相关的知识点")])])]),t._v(" "),s("p",[t._v("其中：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("kind: Service")]),t._v(" 定义了一个名字为 "),s("em",[t._v("Nginx")]),t._v(" 的 Headless Service，创建的 Service 格式为 nginx-0.nginx.default.svc.cluster.local，其他的类似，因为没有指定 Namespace（命名空间），所以默认部署在 default。")]),t._v(" "),s("li",[s("code",[t._v("kind: StatefulSet")]),t._v(" 定义了一个名字为 "),s("em",[t._v("web")]),t._v(" 的 StatefulSet，replicas 表示部署 Pod 的副本数，本实例为 2。")])]),t._v(" "),s("p",[t._v("在 StatefulSet 中必须设置 Pod 选择器（.spec.selector）用来匹配其标签（.spec.template.metadata.labels）。在 1.8 版本之前，如果未配置该字段（.spec.selector），将被设置为默认值，在 1.8 版本之后，如果未指定匹配 Pod Selector，则会导致 StatefulSet 创建错误。")]),t._v(" "),s("p",[t._v("当 StatefulSet 控制器创建 Pod 时，它会添加一个标签 "),s("a",{attrs:{href:"http://statefulset.kubernetes.io/pod-name%EF%BC%8C%E8%AF%A5%E6%A0%87%E7%AD%BE%E7%9A%84%E5%80%BC%E4%B8%BA",target:"_blank",rel:"noopener noreferrer"}},[t._v("statefulset.kubernetes.io/pod-name，该标签的值为"),s("OutboundLink")],1),t._v(" Pod 的名称，用于匹配 Service。")]),t._v(" "),s("h1",{attrs:{id:"statefulset-创建和扩缩容"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#statefulset-创建和扩缩容"}},[t._v("#")]),t._v(" StatefulSet 创建和扩缩容")]),t._v(" "),s("p",[t._v("创建一个sts")]),t._v(" "),s("div",{staticClass:"language-xml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[t._v("[root@k8s-master01 ~]# kubectl create -f nginx-sts.yaml # -n namespace_name\nservice/nginx created\nstatefulset.apps/web created\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("更改副本数为3")]),t._v(" "),s("div",{staticClass:"language-xml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[t._v("[root@k8s-master01 ~]# kubectl scale --replicas=3 sts web\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("创建以及缩容过程，都是先按序号从小到大创建 pod。如先创建 web-0，等 web-0 启动成功才会去创建 web-0，期间如果前面的 pod 被手动删除或者挂掉，会先启动前面的 pod，再创建新的 pod。")]),t._v(" "),s("p",[t._v("缩容操作按序号从大到小删除 pod。")]),t._v(" "),s("blockquote",[s("ul",[s("li",[s("a",{attrs:{href:"https://kubernetes.io/zh/docs/tutorials/stateful-application/basic-stateful-set/#%E9%A1%BA%E5%BA%8F%E5%88%9B%E5%BB%BA-pod",target:"_blank",rel:"noopener noreferrer"}},[t._v("顺序创建 Pod"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://kubernetes.io/zh/docs/tutorials/stateful-application/basic-stateful-set/#%E6%89%A9%E5%AE%B9-%E7%BC%A9%E5%AE%B9-statefulset",target:"_blank",rel:"noopener noreferrer"}},[t._v("扩容/缩容 StatefulSet"),s("OutboundLink")],1)])])]),t._v(" "),s("h1",{attrs:{id:"更新-statefulset"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#更新-statefulset"}},[t._v("#")]),t._v(" 更新 StatefulSet")]),t._v(" "),s("p",[t._v("通过 "),s("code",[t._v("kubectl get sts web -o yaml")]),t._v(" 查看 sts 的 yaml，可以看到 "),s("code",[t._v(".spec.updateStrategy")]),t._v(" 中配置的更新策略。")]),t._v(" "),s("div",{staticClass:"language-yaml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" apps/v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" StatefulSet\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("creationTimestamp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2020-09-19T07:46:49Z"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("generation")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" web\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" default\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("podManagementPolicy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" OrderedReady\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("replicas")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("revisionHistoryLimit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("selector")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matchLabels")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("serviceName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("template")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("creationTimestamp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token null important"}},[t._v("null")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.15.2\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("imagePullPolicy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" IfNotPresent\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" web\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("protocol")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" TCP\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("resources")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("terminationMessagePath")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /dev/termination"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("log\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("terminationMessagePolicy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" File\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("dnsPolicy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ClusterFirst\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("restartPolicy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Always\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("schedulerName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" default"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("scheduler\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("securityContext")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("terminationGracePeriodSeconds")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token important"}},[t._v("**updateStrategy:")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rollingUpdate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("partition")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" RollingUpdate"),s("span",{pre:!0,attrs:{class:"token important"}},[t._v("**")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br"),s("span",{staticClass:"line-number"},[t._v("32")]),s("br"),s("span",{staticClass:"line-number"},[t._v("33")]),s("br"),s("span",{staticClass:"line-number"},[t._v("34")]),s("br"),s("span",{staticClass:"line-number"},[t._v("35")]),s("br"),s("span",{staticClass:"line-number"},[t._v("36")]),s("br"),s("span",{staticClass:"line-number"},[t._v("37")]),s("br"),s("span",{staticClass:"line-number"},[t._v("38")]),s("br"),s("span",{staticClass:"line-number"},[t._v("39")]),s("br"),s("span",{staticClass:"line-number"},[t._v("40")]),s("br"),s("span",{staticClass:"line-number"},[t._v("41")]),s("br")])]),s("p",[t._v("通过 "),s("code",[t._v(".spec.updateStrategy")]),t._v(" 字段配置 StatefulSet 的更新策略，有两个选项：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("RollingUpdate")]),t._v("：对 StatefulSet 中的 Pod 执行自动的滚动更新。默认的更新策略。")]),t._v(" "),s("li",[s("code",[t._v("OnDelete")]),t._v("：不会自动更新 StatefulSet 中的 Pod，必须手动删除 Pod 让控制器创建新的 Pod，以此来更新。")])]),t._v(" "),s("p",[s("strong",[t._v("滚动更新")])]),t._v(" "),s("p",[t._v("当使用 "),s("code",[t._v("RollingUpdate")]),t._v(" 更新策略时， StatefulSet 控制器会删除和重建 StatefulSet 中的每个 Pod。它将按照 Pod 序号从大到小，每次更新一个 Pod。")]),t._v(" "),s("p",[t._v("Kubernetes 控制面会等到被更新的 Pod 进入 Running 和 Ready 状态，然后再更新其前身。 如果你设置了 "),s("code",[t._v(".spec.minReadySeconds")]),t._v("（查看"),s("a",{attrs:{href:"https://kubernetes.io/zh/docs/concepts/workloads/controllers/statefulset/#minimum-ready-seconds",target:"_blank",rel:"noopener noreferrer"}},[t._v("最短就绪秒数"),s("OutboundLink")],1),t._v("），控制面在 Pod 就绪后会额外等待一定的时间再执行下一步。")]),t._v(" "),s("p",[s("strong",[t._v("分区滚动更新")])]),t._v(" "),s("p",[t._v("通过声明 "),s("code",[t._v(".spec.updateStrategy.rollingUpdate.partition")]),t._v(" 的方式，"),s("code",[t._v("RollingUpdate")]),t._v(" 更新策略可以实现分区。")]),t._v(" "),s("p",[t._v("如果配置了 "),s("code",[t._v("partition")]),t._v("，当 StatefulSet 的更新时， 所有序号大于等于 "),s("code",[t._v("partition")]),t._v(" 的 Pod 都会被更新。 所有序号小于该分区序号的 Pod 都不会被更新，并且，即使他们被删除也会依据之前的版本进行重建。 如果 "),s("code",[t._v("partition")]),t._v(" 大于它的副本数，则更新不会被应用。")]),t._v(" "),s("p",[t._v("阶段更新和金丝雀发布时，可能用到分区滚动更新。")]),t._v(" "),s("h1",{attrs:{id:"删除-statefulset"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除-statefulset"}},[t._v("#")]),t._v(" 删除 StatefulSet")]),t._v(" "),s("p",[t._v("StatefulSet 同时支持级联和非级联删除。使用非级联方式删除 StatefulSet 时，StatefulSet 的 Pod 不会被删除。使用级联删除时，StatefulSet 和它的 Pod 都会被删除。")]),t._v(" "),s("p",[t._v("使用 "),s("code",[t._v("kubectl delete statefulset web --cascade=orphan")]),t._v(" 来实现非级联删除，省略 "),s("code",[t._v("--cascade=orphan")]),t._v(" 默认为级联删除。")]),t._v(" "),s("p",[t._v("非级联删除后，剩余的 pod 没有 sts 管理成为孤儿 pod，此时手动删除 pod 不会再重建了。")]),t._v(" "),s("p",[t._v("更多参考："),s("a",{attrs:{href:"https://kubernetes.io/zh/docs/tutorials/stateful-application/basic-stateful-set/#%E5%88%A0%E9%99%A4-statefulset",target:"_blank",rel:"noopener noreferrer"}},[t._v("删除 StatefulSet"),s("OutboundLink")],1)]),t._v(" "),s("h1",{attrs:{id:"附录-相关官方文档"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#附录-相关官方文档"}},[t._v("#")]),t._v(" 附录：相关官方文档")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://kubernetes.io/zh/docs/concepts/workloads/controllers/statefulset/",target:"_blank",rel:"noopener noreferrer"}},[t._v("StatefulSet 概念"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://kubernetes.io/zh/docs/tutorials/stateful-application/basic-stateful-set/",target:"_blank",rel:"noopener noreferrer"}},[t._v("StatefulSet 基础"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://kubernetes.io/zh/docs/concepts/services-networking/service/#headless-services",target:"_blank",rel:"noopener noreferrer"}},[t._v("Headless Service"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://kubernetes.io/zh/docs/tasks/run-application/scale-stateful-set/",target:"_blank",rel:"noopener noreferrer"}},[t._v("扩缩 StatefulSet"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://kubernetes.io/zh/docs/tasks/run-application/delete-stateful-set/",target:"_blank",rel:"noopener noreferrer"}},[t._v("删除 StatefulSet"),s("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=n.exports}}]);