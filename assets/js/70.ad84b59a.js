(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{395:function(s,t,a){"use strict";a.r(t);var e=a(4),r=Object(e.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"一、呼唤集群"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、呼唤集群"}},[s._v("#")]),s._v(" 一、呼唤集群")]),s._v(" "),t("ol",[t("li",[s._v("并发量：单机 redis 可以承受 10 万的 QPS，如果并发量超过该数值，需要分布式集群")]),s._v(" "),t("li",[s._v("数据量：数据量超过单机承载能力时，需要分布式集群")]),s._v(" "),t("li",[s._v("网络流量：分担网卡压力，需要分布式集群")])]),s._v(" "),t("p",[s._v("为了上述需求，redis 3.0 提供了 redis cluster 功能。")]),s._v(" "),t("h1",{attrs:{id:"二、数据分布"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二、数据分布"}},[s._v("#")]),s._v(" 二、数据分布")]),s._v(" "),t("h2",{attrs:{id:"_2-1-数据分区方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-数据分区方式"}},[s._v("#")]),s._v(" 2.1 数据分区方式")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://z3.ax1x.com/2021/06/08/2r2Gss.png",alt:"image-20210608180609901"}})]),s._v(" "),t("p",[s._v("分布式数据库需要数据分区，分区要使用一定的规则，例如有顺序分区和哈希分区。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://z3.ax1x.com/2021/06/08/2r2sy9.png",alt:"image-20210608180746018"}})]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",{staticStyle:{"text-align":"center"}},[s._v("分布方式")]),s._v(" "),t("th",{staticStyle:{"text-align":"center"}},[s._v("特点")]),s._v(" "),t("th",{staticStyle:{"text-align":"center"}},[s._v("典型产品")])])]),s._v(" "),t("tbody",[t("tr",[t("td",{staticStyle:{"text-align":"center"}},[s._v("哈希分区")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("数据分散度高"),t("br"),s._v("键值分布业务无关"),t("br"),s._v("无法顺序访问"),t("br"),s._v("支持批量操作")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("一致性哈希 Memcache"),t("br"),s._v("Redis Cluster"),t("br"),s._v("其他缓存产品")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"center"}},[s._v("顺序分区")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("数据分散度易倾斜"),t("br"),s._v("键值业务相关"),t("br"),s._v("可顺序访问"),t("br"),s._v("支持批量操作")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("GigTable"),t("br"),s._v("Hbase")])])])]),s._v(" "),t("p",[s._v("哈希分区的几种方案：")]),s._v(" "),t("ul",[t("li",[s._v("节点取余分区")]),s._v(" "),t("li",[s._v("一致性哈希分区")]),s._v(" "),t("li",[s._v("虚拟槽分区（redis cluster 采用方式）")])]),s._v(" "),t("h2",{attrs:{id:"_2-2-节点取余分区"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-节点取余分区"}},[s._v("#")]),s._v(" 2.2 节点取余分区")]),s._v(" "),t("p",[s._v("节点取余分区："),t("code",[s._v("hash(key) % nodes")]),s._v("，但是添加节点后，数据分区需要偏移，影响很多数据。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://z3.ax1x.com/2021/06/08/2rfzlD.png",alt:"image-20210608181708138"}})]),s._v(" "),t("ul",[t("li",[s._v("客户端分片：哈希 + 取余")]),s._v(" "),t("li",[s._v("节点伸缩：数据节点关系变化，导致数据迁移")]),s._v(" "),t("li",[s._v("迁移数量和添加节点数量有关：建议翻倍扩容")])]),s._v(" "),t("h2",{attrs:{id:"_2-3-一致性哈希分区"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-一致性哈希分区"}},[s._v("#")]),s._v(" 2.3 一致性哈希分区")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://z3.ax1x.com/2021/06/08/2r4ZU1.png",alt:"image-20210608182231911"}})]),s._v(" "),t("ul",[t("li",[s._v("客户端分片：哈希 + 顺时针（优化取余）")]),s._v(" "),t("li",[s._v("节点伸缩：只影响邻近节点，但是还是有数据迁移")]),s._v(" "),t("li",[s._v("翻倍伸缩：保证最小迁移数据和负载均衡")])]),s._v(" "),t("p",[s._v("例如在 node1 和 node2 之间插入节点 node5，则只影响 node2上 的数据，别的节点数据不受影响。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://z3.ax1x.com/2021/06/08/2r5SZd.png",alt:"image-20210608182704133"}})]),s._v(" "),t("h2",{attrs:{id:"_2-4-虚拟槽分区"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-虚拟槽分区"}},[s._v("#")]),s._v(" 2.4 虚拟槽分区")]),s._v(" "),t("ul",[t("li",[s._v("预设虚拟槽：每个槽映射一个数据子集，一般比节点数大")]),s._v(" "),t("li",[s._v("良好的哈希函数：例如 CRC16")]),s._v(" "),t("li",[s._v("服务端管理节点、槽、数据：例如 Redis Cluster")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://z3.ax1x.com/2021/06/08/2r5ceH.png",alt:"image-20210608182858454"}})]),s._v(" "),t("p",[s._v("数据 key 经过 hash 之后，对节点槽上限取余，结果落到哪个槽，数据就在对应的节点上")]),s._v(" "),t("h1",{attrs:{id:"三、搭建集群"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三、搭建集群"}},[s._v("#")]),s._v(" 三、搭建集群")]),s._v(" "),t("h2",{attrs:{id:"_3-1-基本架构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-基本架构"}},[s._v("#")]),s._v(" 3.1 基本架构")]),s._v(" "),t("h3",{attrs:{id:"单体架构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#单体架构"}},[s._v("#")]),s._v(" 单体架构")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://z3.ax1x.com/2021/06/09/2yFfiR.png",alt:"image-20210609100322478"}})]),s._v(" "),t("ul",[t("li",[s._v("一个 redis 实例负责读写")]),s._v(" "),t("li",[s._v("客户端连接这个单点")])]),s._v(" "),t("h3",{attrs:{id:"分布式架构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#分布式架构"}},[s._v("#")]),s._v(" 分布式架构")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://z3.ax1x.com/2021/06/09/2yeISA.png",alt:"image-20210609102927474"}})]),s._v(" "),t("ul",[t("li",[s._v("服务端有很多个节点，每个节点都负责去读也负责去写")]),s._v(" "),t("li",[s._v("节点之间是彼此通信的，内部使用 Gossip 协议")])]),s._v(" "),t("h3",{attrs:{id:"redis-cluster架构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#redis-cluster架构"}},[s._v("#")]),s._v(" Redis Cluster架构")]),s._v(" "),t("ul",[t("li",[s._v("节点：集群中的 redis 节点")]),s._v(" "),t("li",[s._v("meet：节点之间通信操作")]),s._v(" "),t("li",[s._v("指派槽：每个节点都指派对应的槽，用来判断数据是否在该节点指派槽内")]),s._v(" "),t("li",[s._v("复制：为了保证高可用，每个主节点都有一个从节点（内部监控不依赖于 sentinel）")])]),s._v(" "),t("p",[t("strong",[s._v("(1) 节点")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://z3.ax1x.com/2021/06/09/2ym6pj.png",alt:"image-20210609103135805"}})]),s._v(" "),t("p",[s._v("在 redis cluster 中有一个配置 "),t("code",[s._v("cluster-enabled: yes")]),s._v("，配置为 yes 表示以集群模式启动")]),s._v(" "),t("p",[t("strong",[s._v("(2) meet")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://z3.ax1x.com/2021/06/09/2ym2Xq.png",alt:"image-20210609103155317"}})]),s._v(" "),t("p",[s._v("节点之间通过 meet 操作，互相交换信息。在此基础上，知道哪些节点负责哪些槽。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://z3.ax1x.com/2021/06/09/2ymfBV.png",alt:"image-20210609103224950"}})]),s._v(" "),t("p",[s._v("所有节点共享信息。")]),s._v(" "),t("p",[t("strong",[s._v("(3) 指派槽")])]),s._v(" "),t("p",[s._v("如图，假设现在 redis cluster 总共有 16384 个槽，为了达到负载均衡的效果，为每个节点指派指定的槽。当命令的 key 到达某节点后，会根据 "),t("code",[s._v("hash(key) % 16384")]),s._v(" 的计算结果，判断数据是否落在自己的指派槽范围内。如果在就返回结果，不在的话返回对应的节点，因为每个节点都知道每个节点个指派槽的关系。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://z3.ax1x.com/2021/06/09/2ymINF.png",alt:"image-20210609103310911"}})]),s._v(" "),t("p",[s._v("对于客户端来说，只需要计算一个key，算出其对应的槽。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://z3.ax1x.com/2021/06/09/2ymzND.png",alt:"image-20210609103439215"}})]),s._v(" "),t("p",[t("strong",[s._v("(4) 复制")])]),s._v(" "),t("p",[s._v("Redis Cluster 特性")]),s._v(" "),t("ul",[t("li",[s._v("复制：集群是有主从复制的，每个主节点都有一个从节点")]),s._v(" "),t("li",[s._v("高可用：每个主节点故障，从节点都可以晋升，从而实现高可用")]),s._v(" "),t("li",[s._v("分片：数据是分片的，由多个主节点进行读写")])]),s._v(" "),t("h2",{attrs:{id:"_3-3-搭建集群-原生命令安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-搭建集群-原生命令安装"}},[s._v("#")]),s._v(" 3.3 搭建集群（原生命令安装）")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("配置开启节点：加入 redis cluster 配置")]),s._v(" "),t("p",[s._v("节点配置")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://z3.ax1x.com/2021/06/09/2yDrUU.png",alt:"image-20210609114029307"}})]),s._v(" "),t("blockquote",[t("p",[s._v("主要配置说明：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('cluster-enabled yes                # 集群模式启动\ncluster-node-timeout 15000         # 节点超时时间（毫秒）\ncluster-config-file "nodes.conf"   # 集群节点的配置\ncluster-require-full-coverage yes  # 集群是否需要要求所有节点都正常，一般配置no\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])])]),s._v(" "),t("p",[s._v("启动多个节点")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("redis-server redis-7000.conf \nredis-server redis-7001.conf \nredis-server redis-7002.conf \nredis-server redis-7003.conf \nredis-server redis-7004.conf \nredis-server redis-7005.conf\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("meet 操作：实现节点间的通信")]),s._v(" "),t("p",[s._v("执行 meet 命令，"),t("code",[s._v("cluster meet ip port")]),s._v("，让节点之间建立通信关系")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("redis-cli "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-h")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7000")]),s._v(" cluster meet "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7001")]),s._v(" \nredis-cli "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-h")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7000")]),s._v(" cluster meet "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7002")]),s._v(" \nredis-cli "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-h")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7000")]),s._v(" cluster meet "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7003")]),s._v(" \nredis-cli "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-h")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7000")]),s._v(" cluster meet "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7004")]),s._v(" \nredis-cli "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-h")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7000")]),s._v(" cluster meet "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7005")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("上述命令，在 7000 端口的节点 meet 了 7001~7005 节点，根据 Gossip 协议，他们会互相交换信息，从而互相全部连通。")])]),s._v(" "),t("li",[t("p",[s._v("分配指派槽：确定数据访问关系")]),s._v(" "),t("p",[s._v("通过以下命令分配槽，"),t("code",[s._v("cluster addslots slot [slot...]")])]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("redis-cli "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-h")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7000")]),s._v(" cluster addslots "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5461")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" \nredis-cli "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-h")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7001")]),s._v(" cluster addslots "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5462")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10922")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" \nredis-cli "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-h")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7002")]),s._v(" cluster addslots "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10923")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".16383"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("blockquote",[t("p",[s._v("分配槽命令是一个一个分配的，可以使用 shell 帮助分配，以下脚本 addslots.sh")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("start")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v("   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 参数1：起始槽")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("end")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$2")]),s._v("     "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 参数2：终止槽")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("port")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$3")]),s._v("    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 参数2：端口")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 循环将槽分配给指定端口的 redis 节点")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[s._v("slot")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("seq")]),s._v(" $"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("start"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" $"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("end"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"slot:'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${slot}")]),s._v('"')]),s._v("\n    redis-cli "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${port}")]),s._v(" cluster addslots "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${slot}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("p",[s._v("执行脚本，给 7000、7001、7002 节点分配槽")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" addslots.sh "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5461")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7000")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" addslots.sh "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5462")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10922")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7001")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" addslots.sh "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10923")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("16383")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7002")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])])])]),s._v(" "),t("li",[t("p",[s._v("设置主从：有主从关系才能实现故障的自动转移")]),s._v(" "),t("p",[s._v("通过以下命令，设置集群主从关系，"),t("code",[s._v("cluster replicate node-id")])]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("redis-cli "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-h")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7003")]),s._v(" cluster replicate "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${node-id-7000}")]),s._v(" \nredis-cli "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-h")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7004")]),s._v(" cluster replicate "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${node-id-7001}")]),s._v(" \nredis-cli "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-h")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7005")]),s._v(" cluster replicate "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${node-id-7002}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("上述命令中，让 7003 去复制 7000，让 7004 去复制 7001，让 7005 去复制 7002")])])]),s._v(" "),t("p",[s._v("下面介绍一些集群命令")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("cluster nodes")]),s._v("：查看集群节点信息")]),s._v(" "),t("li",[t("code",[s._v("cluster info")]),s._v("：查看集群信息")]),s._v(" "),t("li",[t("code",[s._v("cluster solts")]),s._v("：查看集群槽的分配情况")])]),s._v(" "),t("h2",{attrs:{id:"_3-4-搭建集群-官方工具-redis-trib"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-搭建集群-官方工具-redis-trib"}},[s._v("#")]),s._v(" 3.4 搭建集群（官方工具 redis-trib）")]),s._v(" "),t("p",[s._v("原生安装方式很麻烦，生产环境一般不使用。官方提供了 ruby 的安装脚本，相比原生安装方式方便很多。")]),s._v(" "),t("h3",{attrs:{id:"ruby-环境准备"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ruby-环境准备"}},[s._v("#")]),s._v(" ruby 环境准备")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 下载 ruby")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" https://cache.ruby-lang.org/pub/ruby/2.3/ruby-2.3.1.tar.gz\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 安装 ruby ")]),s._v("\ntar-xvf ruby-2.3.1.tar.gz \n./configure "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-prefix")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/usr/local/ruby \n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("make")]),s._v(" \n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("make")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" \n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /usr/local/ruby \n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" bin/ruby /usr/local/bin\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" bin/gem /usr/local/bin\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 安装 rubygem redis")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" http://rubygems.org/downloads/redis-3.3.0.gem \ngem "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-l")]),s._v(" redis-3.3.0.gem \ngem list "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--check")]),s._v(" redis gem\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 安装 redis-trib.rb")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${REDIS_HOME}")]),s._v("/src/redis-trib.rb /usr/local/bin\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br")])]),t("h3",{attrs:{id:"搭建集群"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#搭建集群"}},[s._v("#")]),s._v(" 搭建集群")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("启动节点")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("redis-server redis-8000.conf \nredis-server redis-8001.conf \nredis-server redis-8002.conf \nredis-server redis-8003.conf \nredis-server redis-8004.conf \nredis-server redis-8005.conf\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("一键搭建集群")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1 表示主节点的从节点个数，前三个 {ip:port} 表示主节点，后三个表示对应的从节点")]),s._v("\n./redis-trib.rb create "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--replicas")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:8000 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:8001 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:8002 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:8003 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:8004 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:8005\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("blockquote",[t("p",[s._v("ruby 脚本命令解释："),t("a",{attrs:{href:"https://www.cnblogs.com/ivictor/p/9768010.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("redis-trib.rb命令详解"),t("OutboundLink")],1)])])])]),s._v(" "),t("h2",{attrs:{id:"_3-5-总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-总结"}},[s._v("#")]),s._v(" 3.5 总结")]),s._v(" "),t("ol",[t("li",[s._v("原生命令安装\n"),t("ul",[t("li",[s._v("理解 Redis Cluster 架构。")]),s._v(" "),t("li",[s._v("生产环境不使用。")])])]),s._v(" "),t("li",[s._v("官方工具安装\n"),t("ul",[t("li",[s._v("高效、准确。")]),s._v(" "),t("li",[s._v("生产环境可以使用。")])])]),s._v(" "),t("li",[s._v("其他\n"),t("ul",[t("li",[s._v("可视化部署")])])])]),s._v(" "),t("h1",{attrs:{id:"四、集群伸缩"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#四、集群伸缩"}},[s._v("#")]),s._v(" 四、集群伸缩")]),s._v(" "),t("h2",{attrs:{id:"_4-1-伸缩原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-伸缩原理"}},[s._v("#")]),s._v(" 4.1 伸缩原理")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://z3.ax1x.com/2021/06/09/26DIk8.png",alt:"image-20210609153637202"}})]),s._v(" "),t("p",[s._v("集群伸缩就是有节点加入集群或从集群中下线。")]),s._v(" "),t("p",[t("strong",[s._v("集群伸缩 = 槽和数据在节点之间的移动")]),s._v("，如下图，是一个扩容集群的示意图")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://z3.ax1x.com/2021/06/09/26rDun.png",alt:"image-20210609153716625"}})]),s._v(" "),t("h2",{attrs:{id:"_4-2-扩容集群"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-扩容集群"}},[s._v("#")]),s._v(" 4.2 扩容集群")]),s._v(" "),t("p",[s._v("扩容集群的步骤：")]),s._v(" "),t("ol",[t("li",[s._v("准备新节点")]),s._v(" "),t("li",[s._v("加入集群")]),s._v(" "),t("li",[s._v("迁移槽和数据")])]),s._v(" "),t("h3",{attrs:{id:"准备新节点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#准备新节点"}},[s._v("#")]),s._v(" 准备新节点")]),s._v(" "),t("p",[s._v("新节点特点：")]),s._v(" "),t("ul",[t("li",[s._v("集群模式")]),s._v(" "),t("li",[s._v("配置和其他节点统一")]),s._v(" "),t("li",[s._v("启动后是孤儿节点")])]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("redis-server conf/redis-6385.conf \nredis-server conf/redis-6386.conf\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[t("img",{attrs:{src:"https://z3.ax1x.com/2021/06/09/26s324.png",alt:"image-20210609154049422"}})]),s._v(" "),t("h3",{attrs:{id:"加入集群"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#加入集群"}},[s._v("#")]),s._v(" 加入集群")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" cluster meet "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6385")]),s._v(" \n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" cluster meet "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6386")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[t("img",{attrs:{src:"https://z3.ax1x.com/2021/06/09/26yVJO.png",alt:"image-20210609154226931"}})]),s._v(" "),t("p",[s._v("加入集群的作用：")]),s._v(" "),t("ul",[t("li",[s._v("为它迁移槽和数据实现 "),t("em",[s._v("扩容")])]),s._v(" "),t("li",[s._v("作为从节点负责 "),t("em",[s._v("故障转移")])])]),s._v(" "),t("p",[s._v("以上的原生 redis cluster 方式加入集群，下面是 redis-trib.rb 方式加入集群：")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("redis-trib.rb add-node new_host:new_port existing_host:existing_port "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--slave")]),s._v(" --master-id "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("arg"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" \nredis-trib.rb add-node "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:6385 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:6379 \n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 建议使用 redis-trib.rb 能够避免新节点已经加入了其他集群，造成故障。")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h3",{attrs:{id:"迁移槽和数据"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#迁移槽和数据"}},[s._v("#")]),s._v(" 迁移槽和数据")]),s._v(" "),t("p",[s._v("步骤：")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("槽迁移计划")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://z3.ax1x.com/2021/06/09/262zrQ.png",alt:"image-20210609155228536"}})])]),s._v(" "),t("li",[t("p",[s._v("迁移数据")]),s._v(" "),t("p",[s._v("迁移数据步骤：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://z3.ax1x.com/2021/06/09/26WU6U.png",alt:"image-20210609155955050"}})]),s._v(" "),t("ol",[t("li",[s._v("对目标节点发送："),t("code",[s._v("cluster setslot {slot} importing {sourceNodeld}")]),s._v(" 命令，让目标节点准备导入槽的数据。")]),s._v(" "),t("li",[s._v("对源节点发送："),t("code",[s._v("cluster setslot {slot} migrating {targetNodeld}")]),s._v(" 命令，让源节点准备迁出槽的数据。")]),s._v(" "),t("li",[s._v("源节点循环执行 "),t("code",[s._v("cluster getkeysinslot {slot} {count}")]),s._v(" 命令，每次获取 count 个属于槽的健。")]),s._v(" "),t("li",[s._v("在源节点上执行 "),t("code",[s._v("migrate {targetIp} {targetPort} key 0 {timeout}")]),s._v(" 命令把指定 key 迁移。")]),s._v(" "),t("li",[s._v("重复执行步骤 3~4 直到槽下所有的键数据迁移到目标节点。")]),s._v(" "),t("li",[s._v("向集群内所有主节点发送 "),t("code",[s._v("cluster setslot {slot} node {targetNodeld}")]),s._v(" 命令，通知槽分配给目标节点。")])]),s._v(" "),t("p",[s._v("迁移数据伪代码：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://z3.ax1x.com/2021/06/09/26hJMT.png",alt:"image-20210609160749006"}})]),s._v(" "),t("p",[s._v("redis 提供了 "),t("code",[s._v("pipeline migrate")]),s._v(" 来批量迁移数据，此外还有 redis-trib.rb 方式。")])]),s._v(" "),t("li",[t("p",[s._v("添加从节点")])])]),s._v(" "),t("h2",{attrs:{id:"_4-3-缩容集群"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-缩容集群"}},[s._v("#")]),s._v(" 4.3 缩容集群")]),s._v(" "),t("p",[s._v("缩容集群对应以下步骤：")]),s._v(" "),t("ol",[t("li",[s._v("下线迁移槽")]),s._v(" "),t("li",[s._v("忘记节点")]),s._v(" "),t("li",[s._v("关闭节点")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://z3.ax1x.com/2021/06/09/26o2ct.png",alt:"image-20210609161947570"}})]),s._v(" "),t("h3",{attrs:{id:"下线槽"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#下线槽"}},[s._v("#")]),s._v(" 下线槽")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://z3.ax1x.com/2021/06/09/26TVHO.png",alt:"image-20210609162058403"}})]),s._v(" "),t("h3",{attrs:{id:"忘记节点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#忘记节点"}},[s._v("#")]),s._v(" 忘记节点")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("redis-cli> cluster forget {downNodeId}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("img",{attrs:{src:"https://z3.ax1x.com/2021/06/09/26TGb8.png",alt:"image-20210609162148714"}})]),s._v(" "),t("p",[s._v("如果需要忘记一个节点，需要对集群中其他的所有节点执行忘记命令，否则经过后效时间后，集群节点间的通信还会重新扩散该节点信息。")]),s._v(" "),t("h1",{attrs:{id:"五、客户端路由"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#五、客户端路由"}},[s._v("#")]),s._v(" 五、客户端路由")]),s._v(" "),t("p",[s._v("Redis Cluster 的客户端使用不同于单机和 sentinel 模式，需要使用其他的方式进行连接。")]),s._v(" "),t("h2",{attrs:{id:"_5-1-moved重定向"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-moved重定向"}},[s._v("#")]),s._v(" 5.1 moved重定向")]),s._v(" "),t("p",[s._v("moved 重定向发生在命令 key 和连接的节点槽不匹配时。")]),s._v(" "),t("p",[s._v("下图表示客户端向集群发送命令过程，其中第 4 步重定向发送命令需要客户端自己编码实现。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://z3.ax1x.com/2021/06/09/26bGb6.png",alt:"image-20210609163150290"}})]),s._v(" "),t("p",[s._v("槽命中：直接返回")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://z3.ax1x.com/2021/06/09/26bhxs.png",alt:"image-20210609163320828"}})]),s._v(" "),t("p",[s._v("槽不命中：moved 异常")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://z3.ax1x.com/2021/06/09/26OVbt.png",alt:"image-20210609164449354"}})]),s._v(" "),t("p",[s._v("演示：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://z3.ax1x.com/2021/06/09/26OtaV.png",alt:"image-20210609164608186"}})]),s._v(" "),t("p",[s._v("第一次 redis 客户端连接添加了 "),t("code",[s._v("-c")]),s._v(" 参数，表示集群方式连接，可以槽不匹配时会自动重定向；第二次没有以集群方式连接，槽不匹配会抛出 moved 异常。")]),s._v(" "),t("h2",{attrs:{id:"_5-2-ask重定向"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-ask重定向"}},[s._v("#")]),s._v(" 5.2 ask重定向")]),s._v(" "),t("p",[s._v("如果集群发生了扩容或缩容，源节点的 solt 迁移到目标节点，此过程中访问就会有问题。Redis Cluster 考虑到这个问题，有 ask 重定向。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://z3.ax1x.com/2021/06/09/26joUP.png",alt:"image-20210609165650494"}})]),s._v(" "),t("p",[s._v("ask 重定向过程：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://z3.ax1x.com/2021/06/09/26xCdI.png",alt:"image-20210609170208014"}})]),s._v(" "),t("p",[s._v("moved重定向和ask重定向：")]),s._v(" "),t("ul",[t("li",[s._v("两者都是客户单重定向")]),s._v(" "),t("li",[s._v("moved：槽已经确定迁移")]),s._v(" "),t("li",[s._v("ask：槽还在迁移中")])]),s._v(" "),t("p",[s._v("两者都对客户端提出了挑战，命令和槽的匹配性，重定向过程会有性能问题。")]),s._v(" "),t("h2",{attrs:{id:"_5-3-smart-客户端"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-smart-客户端"}},[s._v("#")]),s._v(" 5.3 smart 客户端")]),s._v(" "),t("h3",{attrs:{id:"smart-客户端原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#smart-客户端原理"}},[s._v("#")]),s._v(" smart 客户端原理")]),s._v(" "),t("p",[s._v("smart客户端的目标是追求性能")]),s._v(" "),t("ol",[t("li",[s._v("从集群中选一个可运行节点，使用 cluster slots 初始化槽和节点映射。")]),s._v(" "),t("li",[s._v("将 cluster slots 的结果映射到本地，为每个节点创建 JedisPool。")]),s._v(" "),t("li",[s._v("准备执行命令。")])]),s._v(" "),t("p",[s._v("执行命令简单流程如下")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://z3.ax1x.com/2021/06/09/2cScdA.png",alt:"image-20210609171939509"}})]),s._v(" "),t("h3",{attrs:{id:"smart-客户端使用-jediscluster"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#smart-客户端使用-jediscluster"}},[s._v("#")]),s._v(" smart 客户端使用：JedisCluster")]),s._v(" "),t("p",[t("strong",[s._v("简单使用：")])]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 定义集群节点集合")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Set")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HostAndPort")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" nodeList "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HashSet")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HostAndPort")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \nnodeList"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HostAndPort")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("HOST1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("PORT1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \nnodeList"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HostAndPort")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("HOST2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("PORT2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \nnodeList"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HostAndPort")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("HOST3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("PORT3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nnodeList"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HostAndPort")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("HOST4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("PORT4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \nnodeList"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HostAndPort")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("HOST5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("PORT5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \nnodeList"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HostAndPort")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("HOST6")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("PORT6")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 创建 JedisCluster 对象")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("JedisCluster")]),s._v(" redisCluster "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("JedisCluster")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nodeList"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" timeout"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" poolConfig"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 执行命令")]),s._v("\nredisCluster"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("command"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("p",[t("strong",[s._v("使用技巧：")])]),s._v(" "),t("ol",[t("li",[s._v("单例：内置了所有节点的连接池")]),s._v(" "),t("li",[s._v("无需手动借还连接池")]),s._v(" "),t("li",[s._v("合理设置 commons-pool")])]),s._v(" "),t("p",[t("strong",[s._v("多节点命令实现：")])]),s._v(" "),t("p",[s._v("有些命令需要跨节点，比如 scan")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 获取所有节点的 JeidsPool ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Map")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("JedisPool")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" jedisPoolMap "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" jedisCluster"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getClusterNodes")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Entry")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("JedisPool")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" entry "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" jedisPoolMap"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("entrySet")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" \n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 获取每个节点的 Jedis 连接 ")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Jedis")]),s._v(" jedis "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" entry"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getValue")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getResource")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 只删除主节点数据 ")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("isMaster")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("jedis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" \n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("continue")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// finally close")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("p",[t("strong",[s._v("批量操作优化：")])]),s._v(" "),t("p",[s._v("使用 jedisCluster 完成批量操作，必须保证 mget、mset 的 key 在一个槽内，该条件非常苛刻。批量操作，有以下四种方案：")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("串行 mget")]),s._v(" "),t("p",[s._v("串行执行单个命令")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://z3.ax1x.com/2021/06/09/2ciZ4A.png",alt:"image-20210609174044483"}})])]),s._v(" "),t("li",[t("p",[s._v("串行 IO")]),s._v(" "),t("p",[s._v("先把 key 在客户端进行分组，相同节点上槽的 key 分成一组，然后逐组 pipeline 请求集群中的节点")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://z3.ax1x.com/2021/06/09/2ci0DU.png",alt:"image-20210609174206883"}})])]),s._v(" "),t("li",[t("p",[s._v("并行 IO")]),s._v(" "),t("p",[s._v("并行 IO 就是在串行 IO 的基础上，key 分组后多线程并行请求后端节点")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://z3.ax1x.com/2021/06/09/2cFSaQ.png",alt:"image-20210609174614185"}})])]),s._v(" "),t("li",[t("p",[s._v("hash_tag")]),s._v(" "),t("p",[s._v("将所有的 key 进行 tag 包装，让所有的 key 都落在一个节点，以后 mget 就只需要请求一个节点")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://z3.ax1x.com/2021/06/09/2cFnIJ.png",alt:"image-20210609174735252"}})])])]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("方案")]),s._v(" "),t("th",[s._v("优点")]),s._v(" "),t("th",[s._v("缺点")]),s._v(" "),t("th",[s._v("网络IO")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("串行 mget")]),s._v(" "),t("td",[s._v("编程简单"),t("br"),s._v("少量keys满足需求")]),s._v(" "),t("td",[s._v("大量 keys 请求延迟严重")]),s._v(" "),t("td",[s._v("O(keys)")])]),s._v(" "),t("tr",[t("td",[s._v("串行 IO")]),s._v(" "),t("td",[s._v("编程简单"),t("br"),s._v("少量节点满足需求")]),s._v(" "),t("td",[s._v("大量 node 时延迟严重")]),s._v(" "),t("td",[s._v("O(nodes)")])]),s._v(" "),t("tr",[t("td",[s._v("并行 IO")]),s._v(" "),t("td",[s._v("利用并行特性"),t("br"),s._v("延迟取决于最慢的节点")]),s._v(" "),t("td",[s._v("编程复杂"),t("br"),s._v("超时定位问题难")]),s._v(" "),t("td",[s._v("O(max_slow(node))")])]),s._v(" "),t("tr",[t("td",[s._v("hash_tag")]),s._v(" "),t("td",[s._v("性能最高")]),s._v(" "),t("td",[s._v("读写增加 tag 维护成本"),t("br"),s._v("tag 分布易出现数据倾斜")]),s._v(" "),t("td",[s._v("O(1)")])])])]),s._v(" "),t("h1",{attrs:{id:"六、故障转移"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#六、故障转移"}},[s._v("#")]),s._v(" 六、故障转移")]),s._v(" "),t("p",[s._v("Redis Cluster 中并没有使用 Sentinel 进行监控，因为 Redis Cluster 自身实现了高可用，如果当前节点故障，其他节点可以监控到，实现故障转移。")]),s._v(" "),t("h2",{attrs:{id:"_6-1-故障发现"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-故障发现"}},[s._v("#")]),s._v(" 6.1 故障发现")]),s._v(" "),t("p",[s._v("Redis Cluster 中故障发现原理：")]),s._v(" "),t("ul",[t("li",[s._v("通过节点间的 ping/pong 消息实现故障发现：不需要 sentinel")]),s._v(" "),t("li",[s._v("也分为主观下线和客观下线")])]),s._v(" "),t("h3",{attrs:{id:"主观下线"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#主观下线"}},[s._v("#")]),s._v(" 主观下线")]),s._v(" "),t("p",[s._v("定义：某个节点认为另一个节点不可用，“偏见”")]),s._v(" "),t("p",[s._v("主观下线流程：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://z3.ax1x.com/2021/06/09/2cA22n.png",alt:"image-20210609175847985"}})]),s._v(" "),t("h3",{attrs:{id:"客观下线"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#客观下线"}},[s._v("#")]),s._v(" 客观下线")]),s._v(" "),t("p",[s._v("定义：当半数以上持有槽的主节点都标记某节点主观下线")]),s._v(" "),t("p",[s._v("客观下线逻辑流程：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://z3.ax1x.com/2021/06/09/2cECPH.png",alt:"image-20210609180039669"}})]),s._v(" "),t("p",[s._v("尝试客观下线流程：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://z3.ax1x.com/2021/06/09/2cEGLV.png",alt:"image-20210609180307754"}})]),s._v(" "),t("p",[s._v("客观下线后，进行以下两个工作")]),s._v(" "),t("ul",[t("li",[s._v("通知集群内所有节点标记故障节点为客观下线")]),s._v(" "),t("li",[s._v("通知故障节点的从节点触发故障转移流程")])]),s._v(" "),t("h2",{attrs:{id:"_6-2-故障恢复"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-故障恢复"}},[s._v("#")]),s._v(" 6.2 故障恢复")]),s._v(" "),t("p",[s._v("客观下线后通知到从节点，从节点就会准备开始做故障恢复，从而保证整个集群的高可用。其中包含以下 4 个过程：")]),s._v(" "),t("ol",[t("li",[s._v("资格检查")]),s._v(" "),t("li",[s._v("准备选举时间")]),s._v(" "),t("li",[s._v("选举投票")]),s._v(" "),t("li",[s._v("替换主节点")])]),s._v(" "),t("h3",{attrs:{id:"资格检查"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#资格检查"}},[s._v("#")]),s._v(" 资格检查")]),s._v(" "),t("ul",[t("li",[s._v("每个从节点检查与故障主节点的断线时间。")]),s._v(" "),t("li",[s._v("超过 "),t("code",[s._v("cluster-node-timeout * cluster-slave-validity-factor")]),s._v(" 的计算结果，取消资格。")]),s._v(" "),t("li",[t("code",[s._v("cluster-slave-validity-factor")]),s._v("：默认是 10")])]),s._v(" "),t("h3",{attrs:{id:"准备选举时间"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#准备选举时间"}},[s._v("#")]),s._v(" 准备选举时间")]),s._v(" "),t("p",[s._v("当从节点符合故障转移的资格之后，需要更新触发故障选举的时间，只有达到该时间才会触发后续的流程。这一步是为了保证偏移量大的从节点有更小的延迟，从而达到所谓的选举时间。其实是为了保证数据一致性更高，因为此时主节点故障，只有偏移量最大的从节点数据数据更完整，设置更短的选举时间，让它更快的参与选举。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://z3.ax1x.com/2021/06/09/2cVRBV.png",alt:"image-20210609181022697"}})]),s._v(" "),t("h3",{attrs:{id:"选举投票"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#选举投票"}},[s._v("#")]),s._v(" 选举投票")]),s._v(" "),t("p",[s._v("从节点达到选举时间后，会让主节点对该从节点进行投票。先进入选举的节点更容易得到更多的票数，当票数超过主节点个数的 "),t("code",[s._v("1/2 + 1")]),s._v(" 票后，该节点可以替换主节点。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://z3.ax1x.com/2021/06/09/2cZIVf.png",alt:"image-20210609181606375"}})]),s._v(" "),t("h3",{attrs:{id:"替换主节点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#替换主节点"}},[s._v("#")]),s._v(" 替换主节点")]),s._v(" "),t("ol",[t("li",[s._v("当前从节点取消复制变为主节点。（"),t("code",[s._v("slaveof no one")]),s._v("）")]),s._v(" "),t("li",[s._v("执行 "),t("code",[s._v("clusterDelSlot")]),s._v(" 撤销故障主节点负责的槽，并执行 "),t("code",[s._v("clusterAddSlot")]),s._v(" 把这些槽分配给自己。")]),s._v(" "),t("li",[s._v("向集群广播自己的 pong 消息，表明已经替换了故障从节点。")])]),s._v(" "),t("h1",{attrs:{id:"七、开发运维常见问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#七、开发运维常见问题"}},[s._v("#")]),s._v(" 七、开发运维常见问题")]),s._v(" "),t("h2",{attrs:{id:"_7-1-集群完整性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-集群完整性"}},[s._v("#")]),s._v(" 7.1 集群完整性")]),s._v(" "),t("ul",[t("li",[t("p",[t("code",[s._v("cluster-require-full-coverage")]),s._v(" 默认为 yes")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("集群中 16384 个槽全部可用：保证集群完整性")])]),s._v(" "),t("li",[t("p",[s._v("节点故障或者正在故障转移：")]),s._v(" "),t("p",[t("code",[s._v("(error) CLUSTERDOWN The cluster is down")])])])])]),s._v(" "),t("li",[t("p",[s._v("大多数业务无法容忍，"),t("code",[s._v("cluster-require-full-coverage")]),s._v(" 建议设置为 no")])])]),s._v(" "),t("blockquote",[t("p",[t("code",[s._v("cluster-require-full-coverage")]),s._v(" 如果设置为 yes，只有集群中所有节点都是在线状态，所有 16384 个槽都是成功分配的状态，才认为集群是完整的，集群才会对外提供服务。")])]),s._v(" "),t("h2",{attrs:{id:"_7-2-带宽消耗"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-2-带宽消耗"}},[s._v("#")]),s._v(" 7.2 带宽消耗")]),s._v(" "),t("p",[s._v("Redis Cluster 节点之间会定期交换信息以及心跳检测。节点见进行 ping/pong 消息，官方建议集群节点个数不要超过 1000 个，否则会带来不容忽视的带宽消耗。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://z3.ax1x.com/2021/06/09/2cny5T.png",alt:"image-20210609183541474"}})]),s._v(" "),t("p",[s._v("带宽消耗体现在以下三个方面：")]),s._v(" "),t("ul",[t("li",[s._v("消息发送频率：节点发现与其它节点最后通信时间超过 "),t("code",[s._v("cluster-node-timeout / 2")]),s._v(" 时会直接发送 ping 消息")]),s._v(" "),t("li",[s._v("消息数据量：slots 槽数组（2KB 空间）和整个集群 1/10 的状态数据（10 个节点状态数据约 1KB)")]),s._v(" "),t("li",[s._v("节点部署的机器规模：集群分布的机器越多且每台机器划分的节点数越均匀，则集群内整体的可用带宽越高。")])]),s._v(" "),t("p",[s._v("优化：")]),s._v(" "),t("ul",[t("li",[s._v("避免“大”集群：避免多业务使用一个集群，大业务可以多集群。")]),s._v(" "),t("li",[s._v("cluster-node-timeout：带宽和故障转移速度的均衡。")]),s._v(" "),t("li",[s._v("尽量均匀分配到多机器上：保证高可用和带宽")])]),s._v(" "),t("h2",{attrs:{id:"_7-3-pub-sub-广播"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-3-pub-sub-广播"}},[s._v("#")]),s._v(" 7.3 Pub/Sub 广播")]),s._v(" "),t("p",[s._v("集群中任意一个节点发布消息，消息会在集群中进行传播，即其他节点都会订阅到该消息，增加了带宽消耗。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://z3.ax1x.com/2021/06/09/2cuGLR.png",alt:"image-20210609184414156"}})]),s._v(" "),t("p",[s._v("问题：publish 在集群每个节点广播：加重带宽")]),s._v(" "),t("p",[s._v("解决：如果需要发布订阅，单独“走”一套 Redis Sentinel")]),s._v(" "),t("h2",{attrs:{id:"_7-4-数据倾斜"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-4-数据倾斜"}},[s._v("#")]),s._v(" 7.4 数据倾斜")]),s._v(" "),t("h3",{attrs:{id:"数据倾斜-内存不均"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据倾斜-内存不均"}},[s._v("#")]),s._v(" 数据倾斜：内存不均")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://z3.ax1x.com/2021/06/09/2cMhrj.png",alt:"image-20210609190118320"}})]),s._v(" "),t("p",[s._v("造成数据倾斜的一些原因：")]),s._v(" "),t("ol",[t("li",[s._v("节点和槽分配不均\n"),t("ul",[t("li",[t("code",[s._v("redis-trib.rb info ip:port")]),s._v("：查看节点、槽、键值分布")]),s._v(" "),t("li",[t("code",[s._v("redis-trib.rb rebalance ip:port")]),s._v("：进行均衡操作（谨慎使用）")])])]),s._v(" "),t("li",[s._v("不同槽对应键值数量差异较大\n"),t("ul",[t("li",[s._v("CRC16 正常情况下比较均匀")]),s._v(" "),t("li",[s._v("可能存在 hash_tag")]),s._v(" "),t("li",[t("code",[s._v("cluster countkeysinslot {slot}")]),s._v("：获取槽对应键值个数")])])]),s._v(" "),t("li",[s._v("包含 bigkey\n"),t("ul",[t("li",[s._v("bigkey：例如大字符串、几百万的元素的 hash、set 等")]),s._v(" "),t("li",[s._v("从节点执行："),t("code",[s._v("redis-cli --bigkeys")])]),s._v(" "),t("li",[s._v("优化：优化数据结构")])])]),s._v(" "),t("li",[s._v("内存相关配置不一致\n"),t("ul",[t("li",[t("code",[s._v("hash-max-ziplist-value")]),s._v("、"),t("code",[s._v("set-max-intset-entries")]),s._v(" 等配置")])])])]),s._v(" "),t("h3",{attrs:{id:"请求倾斜-热点数据"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#请求倾斜-热点数据"}},[s._v("#")]),s._v(" 请求倾斜：热点数据")]),s._v(" "),t("p",[s._v("热点 key：重要的 key 或者 bigkey")]),s._v(" "),t("p",[s._v("优化：")]),s._v(" "),t("ul",[t("li",[s._v("避免 bigkey")]),s._v(" "),t("li",[s._v("热键不要用 hash_tag")]),s._v(" "),t("li",[s._v("当一致性不高时，可以用本地缓存 + MQ")])]),s._v(" "),t("h2",{attrs:{id:"_7-5-读写分离"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-5-读写分离"}},[s._v("#")]),s._v(" 7.5 读写分离")]),s._v(" "),t("p",[s._v("只读连接：集群模式的从节点不接受任何读写请求。")]),s._v(" "),t("ul",[t("li",[s._v("重定向到负责槽的主节点")]),s._v(" "),t("li",[s._v("readonly 命令可以读：连接级别命令（只在本次连接内有效）")])]),s._v(" "),t("p",[s._v("Redis Cluster 的读写分离实现更加复杂")]),s._v(" "),t("ul",[t("li",[s._v("同样的问题：复制延迟、读取过期数据、从节点故障")]),s._v(" "),t("li",[s._v("修改客户端：cluster slaves {nodeld}")]),s._v(" "),t("li",[s._v("集群模式下不建议读写分离，可以扩大集群规模")])]),s._v(" "),t("h2",{attrs:{id:"_7-6-数据迁移"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-6-数据迁移"}},[s._v("#")]),s._v(" 7.6 数据迁移")]),s._v(" "),t("p",[s._v("官方迁移工具：redis-trib.rb import")]),s._v(" "),t("ul",[t("li",[s._v("只能从单机迁移到集群")]),s._v(" "),t("li",[s._v("不支持在线迁移：source 需要停写")]),s._v(" "),t("li",[s._v("不支持断点续传")]),s._v(" "),t("li",[s._v("单线程迁移：影响速度")])]),s._v(" "),t("p",[s._v("有一些第三方的工具支持在线迁移数据：")]),s._v(" "),t("ul",[t("li",[s._v("唯品会：redis-migrate-tool")]),s._v(" "),t("li",[s._v("豌豆荚：redis-port")])]),s._v(" "),t("h2",{attrs:{id:"_7-7-集群-vs-单机"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-7-集群-vs-单机"}},[s._v("#")]),s._v(" 7.7 集群 vs 单机")]),s._v(" "),t("p",[s._v("集群有以下限制：")]),s._v(" "),t("ul",[t("li",[s._v("key 批量操作支持有限：例如 mget、mset 必须在一个 slot")]),s._v(" "),t("li",[s._v("Key 事务和 Lua 支持有限：操作的 key 必须在一个节点")]),s._v(" "),t("li",[s._v("key 是数据分区的最小粒度：不支持 bigkey 分区")]),s._v(" "),t("li",[s._v("不支持多个数据库：集群模式下只有一个 db 0")]),s._v(" "),t("li",[s._v("复制只支持一层：不支持树形复制结构")])]),s._v(" "),t("p",[s._v("思考：分布式 Redis 不一定好")]),s._v(" "),t("ol",[t("li",[s._v("Redis Cluster：满足容量和性能的扩展性，很多业务“不需要”\n"),t("ul",[t("li",[s._v("大多数时客户端性能会“降低”")]),s._v(" "),t("li",[s._v("命令无法跨节点使用：mget、keys、scan、flush、sinter等")]),s._v(" "),t("li",[s._v("Lua 和事务无法跨节点使用")]),s._v(" "),t("li",[s._v("客户端维护更复杂：SDK 和应用本身消耗（例如更多的连接池）")])])]),s._v(" "),t("li",[s._v("很多场景 Redis Sentinel 已经足够好")])]),s._v(" "),t("h1",{attrs:{id:"八、总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#八、总结"}},[s._v("#")]),s._v(" 八、总结")]),s._v(" "),t("ul",[t("li",[s._v("Redis cluster 数据分区规则采用虚拟槽方式（16384 个槽），每个节点负责一部分槽和相关数据，实现数据和请求的负载均衡。")]),s._v(" "),t("li",[s._v("搭建集群划分四个步骤：准备节点、节点握手、分配槽、复制。\n"),t("code",[s._v("redis-trib.rb")]),s._v(" 工具用于快速搭建集群。")]),s._v(" "),t("li",[s._v("集群伸缩通过在节点之间移动槽和相关数据实现。\n"),t("ul",[t("li",[s._v("扩容时根据槽迁移计划把槽从源节点迁移到新节点。")]),s._v(" "),t("li",[s._v("收缩时如果下线的节点有负责的槽需要迁移到其它节点，再通过 "),t("code",[s._v("cluster forget")]),s._v(" 命令让集群内所有节点忘记被下线节点。")])])]),s._v(" "),t("li",[s._v("使用 smart 客户端操作集群达到通信效率最大化，客户端内部负责计算维护 "),t("code",[s._v("键 -> 槽 -> 节点")]),s._v(" 的映射，用于快速定位到目标节点。")]),s._v(" "),t("li",[s._v("集群自动故障转移过程分为故障发现和节点恢复。节点下线分为主观下线和客观下线，当超过半数主节点认为故障节点为主观下线时标记它为客观下线状态。从节点负责对客观下线的主节点触发故障恢复流程，保证集群的可用性。")]),s._v(" "),t("li",[s._v("开发运维常见问题包括：超大规模集群带宽消耗，pub/sub 广播问题，集群倾斜问题，单机和集群对比等。")])])])}),[],!1,null,null,null);t.default=r.exports}}]);