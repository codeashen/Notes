(window.webpackJsonp=window.webpackJsonp||[]).push([[99],{424:function(t,n,e){"use strict";e.r(n);var a=e(4),s=Object(a.a)({},(function(){var t=this,n=t._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"configmap"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#configmap"}},[t._v("#")]),t._v(" ConfigMap")]),t._v(" "),n("p",[t._v("一般用 ConfigMap 去管理一些配置文件、或者一些大量的环境变量信息，ConfigMap 将配置和 Pod 分开。")]),t._v(" "),n("p",[t._v("比如有一个 nginx 服务，基于 nginx.conf 配置文件提供服务。如果将配置文件打到镜像里，修改配置不方便。可以将 nginx.conf 保存到 ConfigMap，由 nginx 读取这个 ConfigMap 的内容。")]),t._v(" "),n("p",[t._v("更易于配置文件的更改和管理。")]),t._v(" "),n("blockquote",[n("p",[t._v("ConfigMap 的创建和使用参考 "),n("a",{attrs:{href:"https://www.notion.so/ConfigMap-Secret-5cc0ed86e5414180aff2abc9d43798bd",target:"_blank",rel:"noopener noreferrer"}},[t._v("附录"),n("OutboundLink")],1),t._v(" 。")])]),t._v(" "),n("h1",{attrs:{id:"secret"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#secret"}},[t._v("#")]),t._v(" Secret")]),t._v(" "),n("p",[t._v("Secret更倾向于存储和共享敏感、加密的配置信息。用来保存敏感信息的，比如密码、令牌或者Key，Redis、MySQL密码。")]),t._v(" "),n("p",[t._v("Secret用途：")]),t._v(" "),n("p",[n("strong",[n("code",[t._v("ImagePullSecret")])]),t._v("：Pod 拉取私有镜像仓库时使用的账户密码，里面的账户信息，会传递给 kubelet，然后 kubelet 就可以拉取有密码的仓库里面的镜像。")]),t._v(" "),n("p",[t._v("关于 ImagePullSecret 使用参考官方文档：")]),t._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://kubernetes.io/zh/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod",target:"_blank",rel:"noopener noreferrer"}},[t._v("为 Pod 指定 ImagePullSecrets"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("a",{attrs:{href:"https://kubernetes.io/zh/docs/tasks/configure-pod-container/configure-service-account/#add-imagepullsecrets-to-a-service-account",target:"_blank",rel:"noopener noreferrer"}},[t._v("为 ServiceAccount 添加 ImagePullSecrets"),n("OutboundLink")],1)])]),t._v(" "),n("h1",{attrs:{id:"subpath-解决文件覆盖问题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#subpath-解决文件覆盖问题"}},[t._v("#")]),t._v(" subPath 解决文件覆盖问题")]),t._v(" "),n("p",[t._v("ConfigMap 和 Secret 挂在 Volume 会覆盖目录，即想把 ConfigMap 中的文件挂载到容器的一个目录中，会把该目录中的其他文件都覆盖掉，只剩下挂载进去的文件了。")]),t._v(" "),n("p",[t._v("例如一个 nginx 资源，想挂载 nginx.conf 到 /etc/nginx/ 路径下，会覆盖掉该路径的其他配置文件。")]),t._v(" "),n("p",[t._v("可以使用 subPath 方式解决这个问题，具体步骤如下：")]),t._v(" "),n("ol",[n("li",[n("p",[t._v("准备一个 nginx.conf 文件，基于文件创建 ConfigMap")]),t._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("kubectl create cm nginx-conf --from-file"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("nginx.conf\nkubectl get cm\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br")])])]),t._v(" "),n("li",[n("p",[t._v("创建资源，使用 subPath 挂载 Volume")]),t._v(" "),n("div",{staticClass:"language-yaml line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" apps/v1\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Deployment\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("template")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" sh\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("c\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" sleep 3600\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("imagePullPolicy")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" IfNotPresent\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" web\n          "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("protocol")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" TCP\n        "),n("span",{pre:!0,attrs:{class:"token important"}},[t._v("**volumeMounts:")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" config"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("volume  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#用下面volumes一项的name")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mountPath")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /etc/nginx/nginx.conf\n          "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("subPath")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" etc/nginx/nginx.conf\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" config"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("volume\n        "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("configMap")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("conf\n          "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("items")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx.conf   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#ConfigMap的名称")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" etc/nginx/nginx.conf"),n("span",{pre:!0,attrs:{class:"token important"}},[t._v("**")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("restartPolicy")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Always\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br"),n("span",{staticClass:"line-number"},[t._v("24")]),n("br"),n("span",{staticClass:"line-number"},[t._v("25")]),n("br"),n("span",{staticClass:"line-number"},[t._v("26")]),n("br"),n("span",{staticClass:"line-number"},[t._v("27")]),n("br"),n("span",{staticClass:"line-number"},[t._v("28")]),n("br"),n("span",{staticClass:"line-number"},[t._v("29")]),n("br")])])])]),t._v(" "),n("h1",{attrs:{id:"configmap-secret-自动更新"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#configmap-secret-自动更新"}},[t._v("#")]),t._v(" ConfigMap/Secret 自动更新")]),t._v(" "),n("p",[t._v("当某个 ConfigMap 或 Secret 更新后，原先引用过它的资源里的内容也会被更新。kubelet 在每次周期性同步时都会检查已挂载的 ConfigMap 是否是最新的，更新延迟与 kubelet 同步周期和 ConfigMap 缓存过期时间有关。")]),t._v(" "),n("blockquote",[n("p",[t._v("ConfigMap 和 Secret 如果是以 subPath 的形式挂载的，那么 Pod 是不会感知到 ConfigMap 和 Secret 的更新的。")]),t._v(" "),n("p",[t._v("如果 Pod 的变量来自于 ConfigMap 和 Secret 中定义的内容，那么 ConfigMap 和 Secret 更新后，也不会更新 Pod 中的变量。")])]),t._v(" "),n("p",[t._v("postStart：容器启动之前执行的命令")]),t._v(" "),n("p",[t._v("preStop：容器停止之前执行的命令")]),t._v(" "),n("h1",{attrs:{id:"不可变-configmap-secret"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#不可变-configmap-secret"}},[t._v("#")]),t._v(" 不可变 ConfigMap/Secret")]),t._v(" "),n("p",[t._v("可以使用 "),n("code",[t._v("immutable: true")]),t._v(" 来将 ConfigMap/Secret 设置为不可变的，就不能更新配置内容了，提高安全性。")]),t._v(" "),n("p",[t._v("一旦设置为不可变，就不能更新配置内容，只能删除后重建。")]),t._v(" "),n("h1",{attrs:{id:"附录-相关官方文件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#附录-相关官方文件"}},[t._v("#")]),t._v(" 附录：相关官方文件")]),t._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://kubernetes.io/zh/docs/concepts/configuration/configmap/",target:"_blank",rel:"noopener noreferrer"}},[t._v("ConfigMap 概述"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("a",{attrs:{href:"https://kubernetes.io/zh/docs/tasks/configure-pod-container/configure-pod-configmap/",target:"_blank",rel:"noopener noreferrer"}},[t._v("配置 Pod 使用 ConfigMap"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("a",{attrs:{href:"https://kubernetes.io/zh/docs/tutorials/configuration/configure-redis-using-configmap/",target:"_blank",rel:"noopener noreferrer"}},[t._v("使用 ConfigMap 来配置 Redis"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("a",{attrs:{href:"https://kubernetes.io/zh/docs/concepts/configuration/secret/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Secret 概述"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("a",{attrs:{href:"https://kubernetes.io/zh/docs/tasks/configmap-secret/",target:"_blank",rel:"noopener noreferrer"}},[t._v("管理 Secret"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("a",{attrs:{href:"https://kubernetes.io/zh/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod",target:"_blank",rel:"noopener noreferrer"}},[t._v("为 Pod 指定 ImagePullSecrets"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("a",{attrs:{href:"https://kubernetes.io/zh/docs/tasks/configure-pod-container/configure-service-account/#add-imagepullsecrets-to-a-service-account",target:"_blank",rel:"noopener noreferrer"}},[t._v("为 ServiceAccount 添加 ImagePullSecrets"),n("OutboundLink")],1)])])])}),[],!1,null,null,null);n.default=s.exports}}]);