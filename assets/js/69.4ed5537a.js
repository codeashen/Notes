(window.webpackJsonp=window.webpackJsonp||[]).push([[69],{394:function(s,t,e){"use strict";e.r(t);var a=e(4),n=Object(a.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"一、架构说明"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、架构说明"}},[s._v("#")]),s._v(" 一、架构说明")]),s._v(" "),t("h2",{attrs:{id:"_1-1-为什么需要-redis-sentinel"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-为什么需要-redis-sentinel"}},[s._v("#")]),s._v(" 1.1 为什么需要 Redis Sentinel")]),s._v(" "),t("p",[s._v("主从复制存在以下问题：")]),s._v(" "),t("ul",[t("li",[s._v("手动故障转移：主从结构中节点故障需要手动切换")]),s._v(" "),t("li",[s._v("写能力和存储能力受限：写只能写在主节点，其他节点都是数据副本")])]),s._v(" "),t("p",[s._v("为了解决上述问题，redis提供了 redis sentinel 这样一种高可用的实现")]),s._v(" "),t("h2",{attrs:{id:"_1-2-redis-sentinel-架构说明"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-redis-sentinel-架构说明"}},[s._v("#")]),s._v(" 1.2 Redis Sentinel 架构说明")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://z3.ax1x.com/2021/06/08/2DLgtH.png",alt:"image-20210608151943232"}})]),s._v(" "),t("p",[s._v("在主从结构的redis中，增加了很多redis sentinel节点，redis sentinel也是节点进程，但是不存储数据，而是负责判断节点的健康状况，完成故障转移的功能。对于客户端来说，不再从redis存储节点获取数据，而是直接从redis sentinel获取数据。")]),s._v(" "),t("h2",{attrs:{id:"_1-3-redis-sentinel-故障转移"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-redis-sentinel-故障转移"}},[s._v("#")]),s._v(" 1.3 Redis Sentinel 故障转移")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://z3.ax1x.com/2021/06/08/2DOcrV.png",alt:"image-20210608152442498"}})]),s._v(" "),t("ol",[t("li",[s._v("多个sentinel发现并确认master有问题")]),s._v(" "),t("li",[s._v("选举出一个sentinel作为领导")]),s._v(" "),t("li",[s._v("选出一个slave作为master")]),s._v(" "),t("li",[s._v("通知其余slave成为新的master的slave")]),s._v(" "),t("li",[s._v("通知客户端主从变化")]),s._v(" "),t("li",[s._v("等待老的master复活成为新master的slave")])]),s._v(" "),t("p",[s._v("redis sentinel还可以同时监控多套主从结构，每套主从结构使用"),t("code",[s._v("master-name")]),s._v("作为唯一标识，如下图所示")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://z3.ax1x.com/2021/06/08/2DvYK1.png",alt:"image-20210608153152947"}})]),s._v(" "),t("h1",{attrs:{id:"二、安装配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二、安装配置"}},[s._v("#")]),s._v(" 二、安装配置")]),s._v(" "),t("h2",{attrs:{id:"_2-1-配置方案"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-配置方案"}},[s._v("#")]),s._v(" 2.1 配置方案")]),s._v(" "),t("ol",[t("li",[s._v("配置开启主从节点")]),s._v(" "),t("li",[s._v("配置开启sentine监控主节点。（sentinel是特殊的redis)")]),s._v(" "),t("li",[s._v("实际应该多机器")]),s._v(" "),t("li",[s._v("详细配置节点")])]),s._v(" "),t("h2",{attrs:{id:"_2-2-配置实践"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-配置实践"}},[s._v("#")]),s._v(" 2.2 配置实践")]),s._v(" "),t("p",[s._v("按照下图，配置启动redis主从和sentinel")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://z3.ax1x.com/2021/06/08/2r9PpD.png",alt:"image-20210608155006258"}})]),s._v(" "),t("p",[t("strong",[s._v("redis主节点")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://z3.ax1x.com/2021/06/08/2r9HEt.png",alt:"image-20210608155218102"}})]),s._v(" "),t("p",[t("strong",[s._v("redis从节点")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://z3.ax1x.com/2021/06/08/2r9vvQ.png",alt:"image-20210608155253589"}})]),s._v(" "),t("p",[t("strong",[s._v("sentinel主要配置")])]),s._v(" "),t("p",[s._v("配置文件：sentinel.conf")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://z3.ax1x.com/2021/06/08/2rCCEq.png",alt:"image-20210608155322777"}})]),s._v(" "),t("p",[s._v("配置说明：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("# 监控master-name为mymaster的节点，只当ip和端口，2表示2个sentinel节点发现master故障了，就触发故障转移\nsentinel monitor mymaster 127.0.0.1 7000 2 \n# sentinel监控节点健康的心跳周期，30000毫秒\nsentinel down-after-milliseconds mymaster 30000\n# 选择主节点后，同时从主节点复制数据的从节点个数，1表示串行\nsentinel parallel-syncs mymaster 1 \n# 故障转移时间\nsentinel failover-timeout mymaster 180000\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("p",[s._v("启动方式："),t("code",[s._v("redis-sentinel [configPath]")])]),s._v(" "),t("p",[s._v("启动sentinel节点后，sentinel会根据主节点的 info 信息，自动获取从节点信息，进而监控从节点")]),s._v(" "),t("h1",{attrs:{id:"四、客户端连接"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#四、客户端连接"}},[s._v("#")]),s._v(" 四、客户端连接")]),s._v(" "),t("h2",{attrs:{id:"_4-1-客户端接入sentinel流程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-客户端接入sentinel流程"}},[s._v("#")]),s._v(" 4.1 客户端接入sentinel流程")]),s._v(" "),t("p",[s._v("高可用要同时实现客户端高可用和服务端高可用。服务端高可用依赖于sentinel，客户端高可用需要连接客户端实现。")]),s._v(" "),t("p",[s._v("下面介绍客户端连接sentinel实现高可用的基本原理。")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("客户端获取所有sentinel节点和对应的masterName，选举一个sentinel节点来连接")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://z3.ax1x.com/2021/06/08/2reOwF.png",alt:"image-20210608162006889"}})])]),s._v(" "),t("li",[t("p",[s._v("通过选出的sentinel节点，传入masterName，获取真正的master节点信息")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://z3.ax1x.com/2021/06/08/2rm9Qx.png",alt:"image-20210608162229895"}})])]),s._v(" "),t("li",[t("p",[s._v("拿到master节点信息后，验证节点角色信息，看是否真是master")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://z3.ax1x.com/2021/06/08/2rm3Tg.png",alt:"image-20210608162412042"}})])]),s._v(" "),t("li",[t("p",[s._v("如果master节点信息发生变化，sentinel会使用"),t("strong",[s._v("发布订阅")]),s._v("的模式通知客户端")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://z3.ax1x.com/2021/06/08/2rm0mT.png",alt:"image-20210608162515358"}})])])]),s._v(" "),t("h2",{attrs:{id:"_4-2-jedis连接sentinel"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-jedis连接sentinel"}},[s._v("#")]),s._v(" 4.2 jedis连接sentinel")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("JedisSentinelPool")]),s._v(" sentinelPool "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("JedisSentinelPool")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("masterName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" sentinelSet"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" poolConfig"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" timeout"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Jedis")]),s._v(" jedis "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    jedis "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" redisSentinelPool"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getResource")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//jedis command ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Exception")]),s._v(" e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    logger"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("error")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getMessage")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("finally")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" \n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("jedis "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n        jedis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("close")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("h1",{attrs:{id:"五、实现原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#五、实现原理"}},[s._v("#")]),s._v(" 五、实现原理")]),s._v(" "),t("h2",{attrs:{id:"_5-1-三个定时任务"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-三个定时任务"}},[s._v("#")]),s._v(" 5.1 三个定时任务")]),s._v(" "),t("p",[s._v("redis sentinel 内部有三个定时任务")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("每10秒每个sentinel对master和slave执行info")]),s._v(" "),t("ul",[t("li",[s._v("发现slave节点")]),s._v(" "),t("li",[s._v("确认主从关系")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://z3.ax1x.com/2021/06/08/2rGkvQ.png",alt:"image-20210608165316160"}})])]),s._v(" "),t("li",[t("p",[s._v("每2秒每个sentinel通过master节点的channel交换信息(pub/sub)")]),s._v(" "),t("ul",[t("li",[s._v("通过 "),t("code",[s._v("__sentinel__:hello")]),s._v(" 频道交互")]),s._v(" "),t("li",[s._v("交互对节点的“看法”和自身信息")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://z3.ax1x.com/2021/06/08/2rJ7lD.png",alt:"image-20210608165900151"}})])]),s._v(" "),t("li",[t("p",[s._v("每1秒每个sentinel对其他sentinel和redis执行ping")]),s._v(" "),t("ul",[t("li",[s._v("心跳检测，失败判定依据")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://z3.ax1x.com/2021/06/08/2rYpp8.png",alt:"image-20210608165959110"}})])])]),s._v(" "),t("h2",{attrs:{id:"_5-2-主观下线和客观下线"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-主观下线和客观下线"}},[s._v("#")]),s._v(" 5.2 主观下线和客观下线")]),s._v(" "),t("p",[s._v("相关配置：")]),s._v(" "),t("div",{staticClass:"language-conf line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("# 超过2个sentinel节点认为节点下线，就做后续下线处理（客观下线）\n# sentinel monitor <masterName> <ip> <port> <quorum> \nsentinel monitor myMaster 127.0.0.1 6379 2 \n\n# sentinel节点ping其他节点，超过多少毫秒，就认为该节点下线了（主观下线）\n# sentinel down-after-milliseconds <masterName> <timeout> \nsentinel down-after-milliseconds mymaster 30000\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("ul",[t("li",[t("p",[s._v('主观下线：每个sentinel节点对Redis节点失败的“偏见"')])]),s._v(" "),t("li",[t("p",[s._v('客观下线：所有sentinel节点对Redis节点失败“达成共识"（超过quorum个统一）')]),s._v(" "),t("p",[s._v("sentinel首先对主节点做主观下线的一个判断，然后通过 "),t("code",[s._v("sentinel is-master-down-by-addr")]),s._v(" 询问其他sentinel节点是否也认为主节点下线了")])])]),s._v(" "),t("blockquote",[t("p",[s._v("slave节点做主观下线，因为不需要故障转移，master节点需要做客观下线")])]),s._v(" "),t("h2",{attrs:{id:"_5-3-领导者选举"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-领导者选举"}},[s._v("#")]),s._v(" 5.3 领导者选举")]),s._v(" "),t("p",[s._v("原因：只有一个sentinel节点完成故障转移")]),s._v(" "),t("p",[s._v("选举：通过 "),t("code",[s._v("sentinel is-master-down-by-addr")]),s._v(" 命令都希望成为领导者")]),s._v(" "),t("p",[s._v("过程：")]),s._v(" "),t("ol",[t("li",[s._v("每个做主观下线的Sentinel节点向其他Sentinel节点发送命令，要求将它设置为领导者。")]),s._v(" "),t("li",[s._v("收到命令的Sentinel节点如果没有同意通过其他Sentinel节点发送的命令，那么将同意该请求，否则拒绝。")]),s._v(" "),t("li",[s._v("如果该Sentinel节点发现自己的票数已经超过Sentinel集合半数且超过quorum，那么它将成为领导者。")]),s._v(" "),t("li",[s._v("如果此过程有多个Sentinel节点成为了领导者，那么将等待一段时间重新进行选举。")])]),s._v(" "),t("h2",{attrs:{id:"_5-4-故障转移"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-故障转移"}},[s._v("#")]),s._v(" 5.4 故障转移")]),s._v(" "),t("p",[s._v("故障转移由sentinel选举出的领导者节点完成，过程如下：")]),s._v(" "),t("ol",[t("li",[s._v('从slave节点中选出一个“合适的"节点作为新的master节点')]),s._v(" "),t("li",[s._v("对上面的slave节点执行slaveof no one命令让其成为master节点。")]),s._v(" "),t("li",[s._v("向剩余的slave节点发送命令，让它们成为新master节点的slave节点，复制规则和parallel-syncs参数有关。")]),s._v(" "),t("li",[s._v('更新对原来master节点配置为slave，并保持着对其“关注"，当其恢复后命令它去复制新的master节点。')])]),s._v(" "),t("p",[s._v("如何选择“合适的”slave节点作为新的master节点：")]),s._v(" "),t("ol",[t("li",[s._v("选择slave-priority（slave节点优先级）最高的slave节点，如果存在则返回，不存在则继续。")]),s._v(" "),t("li",[s._v("选择复制偏移量最大的slave节点（复制的最完整），如果存在则返回，不存在则继续。")]),s._v(" "),t("li",[s._v("选择runId最小的slave节点。")])]),s._v(" "),t("h1",{attrs:{id:"六、开发运维中问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#六、开发运维中问题"}},[s._v("#")]),s._v(" 六、开发运维中问题")]),s._v(" "),t("h2",{attrs:{id:"_6-1-节点运维"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-节点运维"}},[s._v("#")]),s._v(" 6.1 节点运维")]),s._v(" "),t("h3",{attrs:{id:"节点下线"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#节点下线"}},[s._v("#")]),s._v(" 节点下线")]),s._v(" "),t("p",[s._v("节点需要下线的原因：")]),s._v(" "),t("ul",[t("li",[s._v("机器下线：例如过保等情况")]),s._v(" "),t("li",[s._v("机器性能不足：例如CPU、内存、硬盘、网络等")]),s._v(" "),t("li",[s._v("节点自身故障：例如服务不稳定等")])]),s._v(" "),t("p",[t("strong",[s._v("主节点下线")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("sentinel failover <masterName>\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("img",{attrs:{src:"https://z3.ax1x.com/2021/06/08/2rDdjx.png",alt:"image-20210608173248488"}})]),s._v(" "),t("p",[t("strong",[s._v("从节点下线")]),s._v("：从节点下线要考虑是临时下线还是永久下线，例如是否做一些清理工作。还要考虑读写分离的情况。")]),s._v(" "),t("p",[t("strong",[s._v("Sentinel节点下线")]),s._v("：同上")]),s._v(" "),t("h3",{attrs:{id:"节点上限"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#节点上限"}},[s._v("#")]),s._v(" 节点上限")]),s._v(" "),t("ul",[t("li",[s._v("主节点：sentinel failover进行替换。")]),s._v(" "),t("li",[s._v("从节点：slaveof 即可，sentinel节点可以感知。")]),s._v(" "),t("li",[s._v("Sentinel节点：参考其他sentinel节点启动即可。")])]),s._v(" "),t("h2",{attrs:{id:"_6-2-高可用读写分离"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-高可用读写分离"}},[s._v("#")]),s._v(" 6.2 高可用读写分离")]),s._v(" "),t("p",[s._v("从节点的作用：")]),s._v(" "),t("ol",[t("li",[s._v("副本：高可用的基础")]),s._v(" "),t("li",[s._v("扩展：读能力")])]),s._v(" "),t("p",[s._v("读写分离是客户端实现的，要实现读写分离，需要关注三个消息")]),s._v(" "),t("ul",[t("li",[s._v("+switch-master：切换主节点（从节点晋升主节点）")]),s._v(" "),t("li",[s._v("+convert-to-slave：切换从节点（原主节点降为从节点）")]),s._v(" "),t("li",[s._v("+sdown：主观下线。")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://z3.ax1x.com/2021/06/08/2r6EMn.png",alt:"image-20210608175034115"}})]),s._v(" "),t("h1",{attrs:{id:"七、总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#七、总结"}},[s._v("#")]),s._v(" 七、总结")]),s._v(" "),t("ul",[t("li",[s._v("Redis Sentinel是Redis的高可用实现方案：故障发现、故障自动转移、配置中心、客户端通知。")]),s._v(" "),t("li",[s._v("Redis Sentinel从Redis2.8版本开始才正式生产可用，之前版本生产不可用。")]),s._v(" "),t("li",[s._v("尽可能在不同物理机上部署Redis Sentinel所有节点。")]),s._v(" "),t("li",[s._v("Redis Sentinel中的Sentinel节点个数应该为大于等于3且最好为奇数。")]),s._v(" "),t("li",[s._v("Redis Sentinel中的数据节点与普通数据节点没有区别。")]),s._v(" "),t("li",[s._v("客户端初始化时连接的是Sentinel节点集合，不再是具体的Redis节点，但Sentinel只是配置中心不是代理。")]),s._v(" "),t("li",[s._v("Redis Sentinel通过三个定时任务实现了Sentinel节点对于主节点、从节点、其余Sentinel节点的监控。")]),s._v(" "),t("li",[s._v("Redis Sentinel在对节点做失败判定时分为主观下线和客观下线。")]),s._v(" "),t("li",[s._v("看懂Redis Sentinel故障转移日志对于Redis Sentine以及问题排查非常有帮助。")]),s._v(" "),t("li",[s._v("Redis Sentinel实现读写分离高可用可以依赖Sentinel节点的消息通知，获取Redis数据节点的状态变化。")])])])}),[],!1,null,null,null);t.default=n.exports}}]);