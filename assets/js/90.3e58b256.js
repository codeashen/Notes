(window.webpackJsonp=window.webpackJsonp||[]).push([[90],{415:function(s,t,a){"use strict";a.r(t);var n=a(4),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"pod-概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pod-概述"}},[s._v("#")]),s._v(" Pod 概述")]),s._v(" "),t("h2",{attrs:{id:"什么是pod"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是pod"}},[s._v("#")]),s._v(" 什么是Pod？")]),s._v(" "),t("p",[s._v("Pod 可简单地理解为是一组、一个或多个容器，具有共享存储/网络及如何运行容器的规范。Pod 包含一个或多个相对紧密耦合的应用程序容器，处于同一个 Pod 中的容器共享同样的存储空间（Volume，卷或存储卷）、IP 地址和 Port 端口，容器之间使用 localhost:port 相互访问。根据 Docker 的构造，Pod 可被建模为一组具有共享命令空间、卷、IP 地址和 Port 端口的 Docker 容器。")]),s._v(" "),t("p",[s._v("Pod 包含的容器最好是一个容器只运行一个进程。每个 Pod 包含一个 pause 容器，pause 容器是 Pod 的父容器，它主要负责僵尸进程的回收管理。")]),s._v(" "),t("p",[s._v("Kubernetes 为每个 Pod 都分配一个唯一的 IP 地址，这样就可以保证应用程序使用同一端口，避免了发生冲突的问题。")]),s._v(" "),t("h2",{attrs:{id:"pod字段解析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pod字段解析"}},[s._v("#")]),s._v(" Pod字段解析")]),s._v(" "),t("div",{staticClass:"language-yaml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("apiVersion")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" v1  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 必选，API的版本号")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("kind")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Pod       "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 必选，类型Pod")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("metadata")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("       "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 必选，元数据")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" nginx   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 必选，符合RFC 1035规范的Pod名称")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("namespace")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" default "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 可选，Pod所在的命名空间，不指定默认为default，可以使用-n 指定namespace ")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("labels")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("       "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 可选，标签选择器，一般用于过滤和区分Pod")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("app")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" nginx\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("role")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" frontend "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 可以写多个")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("annotations")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 可选，注释列表，可以写多个")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("app")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" nginx\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("spec")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 必选，用于定义容器的详细信息")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("initContainers")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 初始化容器，在容器启动之前执行的一些初始化操作")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("command")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" sh\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("c\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(' echo "I am InitContainer for init some configuration"\n    '),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" busybox\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("imagePullPolicy")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" IfNotPresent\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" init"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("container\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("containers")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 必选，容器列表")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" nginx "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 必选，符合RFC 1035规范的容器名称")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" nginx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("latest    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 必选，容器所用的镜像的地址")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("imagePullPolicy")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Always  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 可选，镜像拉取策略, IfNotPresent: 如果宿主机有该镜像则不拉取. Always: 总是拉取, Never: 不拉取")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("command")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 可选，容器启动执行的命令，相当于镜像里的 ENTRYPOINT, 如果有 ENTRYPOINT 可以不写 command")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" nginx \n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("g\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"daemon off;"')]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("workingDir")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" /usr/share/nginx/html       "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 可选，容器的工作目录")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("volumeMounts")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 可选，存储卷配置，可以配置多个")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" webroot "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 存储卷名称")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("mountPath")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" /usr/share/nginx/html "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 挂载目录")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("readOnly")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean important"}},[s._v("true")]),s._v("        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 只读")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ports")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 可选，容器需要暴露的端口号列表")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" http    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 端口名称")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("containerPort")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("     "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 端口号")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("protocol")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" TCP "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 端口协议，默认TCP")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("env")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 可选，环境变量配置列表")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" TZ      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 变量名")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("value")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Asia/Shanghai "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 变量的值")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" LANG\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("value")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" en_US.utf8\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("resources")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 可选，资源限制和资源请求限制")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("limits")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("       "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 最大限制设置")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("cpu")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 1000m\n        "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("memory")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 1024Mi\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("requests")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("     "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动所需的资源")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("cpu")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 100m\n        "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("memory")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 512Mi\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    startupProbe: # 可选，检测容器内进程是否完成启动。注意三种检查方式同时只能使用一种。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#      httpGet:      # httpGet检测方式，生产环境建议使用httpGet实现接口级健康检查，健康检查由应用程序提供。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#            path: /api/successStart # 检查路径")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#            port: 80")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("readinessProbe")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 可选，健康检查。注意三种检查方式同时只能使用一种。")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("httpGet")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# httpGet检测方式，生产环境建议使用httpGet实现接口级健康检查，健康检查由应用程序提供。")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("path")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" / "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 检查路径")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("port")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 监控端口")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("livenessProbe")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 可选，健康检查")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#exec:        # 执行容器命令检测方式")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#command: ")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#- cat")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#- /health")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#httpGet:       # httpGet检测方式")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#   path: /_health # 检查路径")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#   port: 8080")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#   httpHeaders: # 检查的请求头")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#   - name: end-user")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#     value: Jason ")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("tcpSocket")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 端口检测方式")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("port")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("initialDelaySeconds")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("60")]),s._v("       "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 初始化时间")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("timeoutSeconds")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("     "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 超时时间")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("periodSeconds")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 检测间隔")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("successThreshold")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 检查成功为2次表示就绪")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("failureThreshold")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 检测失败1次表示未就绪")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("lifecycle")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("postStart")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 容器创建完成后执行的指令, 可以是exec httpGet TCPSocket")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("exec")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n          "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("command")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n          "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" sh\n          "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("c\n          "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'mkdir /data/ '")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("preStop")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("httpGet")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("      \n              "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("path")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" /\n              "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("port")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  exec:")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    command:")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    - sh")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    - -c")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#    - sleep 9")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("restartPolicy")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Always   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 可选，默认Always，容器故障或者没有启动成功，那就自动该容器，Onfailure: 容器以不为0的状态终止，自动重启该容器, Never:无论何种状态，都不会重启")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#nodeSelector: # 可选，指定Node节点")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#      region: subnet7")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("imagePullSecrets")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("     "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 可选，拉取镜像使用的secret，可以配置多个")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" default"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("dockercfg"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("86258")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("hostNetwork")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean important"}},[s._v("false")]),s._v("    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 可选，是否为主机模式，如是，会占用主机端口")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("volumes")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 共享存储卷列表")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" webroot "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 名称，与上述对应")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("emptyDir")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 挂载目录")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#hostPath:              # 挂载本机目录")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  path: /etc/hosts")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br"),t("span",{staticClass:"line-number"},[s._v("52")]),t("br"),t("span",{staticClass:"line-number"},[s._v("53")]),t("br"),t("span",{staticClass:"line-number"},[s._v("54")]),t("br"),t("span",{staticClass:"line-number"},[s._v("55")]),t("br"),t("span",{staticClass:"line-number"},[s._v("56")]),t("br"),t("span",{staticClass:"line-number"},[s._v("57")]),t("br"),t("span",{staticClass:"line-number"},[s._v("58")]),t("br"),t("span",{staticClass:"line-number"},[s._v("59")]),t("br"),t("span",{staticClass:"line-number"},[s._v("60")]),t("br"),t("span",{staticClass:"line-number"},[s._v("61")]),t("br"),t("span",{staticClass:"line-number"},[s._v("62")]),t("br"),t("span",{staticClass:"line-number"},[s._v("63")]),t("br"),t("span",{staticClass:"line-number"},[s._v("64")]),t("br"),t("span",{staticClass:"line-number"},[s._v("65")]),t("br"),t("span",{staticClass:"line-number"},[s._v("66")]),t("br"),t("span",{staticClass:"line-number"},[s._v("67")]),t("br"),t("span",{staticClass:"line-number"},[s._v("68")]),t("br"),t("span",{staticClass:"line-number"},[s._v("69")]),t("br"),t("span",{staticClass:"line-number"},[s._v("70")]),t("br"),t("span",{staticClass:"line-number"},[s._v("71")]),t("br"),t("span",{staticClass:"line-number"},[s._v("72")]),t("br"),t("span",{staticClass:"line-number"},[s._v("73")]),t("br"),t("span",{staticClass:"line-number"},[s._v("74")]),t("br"),t("span",{staticClass:"line-number"},[s._v("75")]),t("br"),t("span",{staticClass:"line-number"},[s._v("76")]),t("br"),t("span",{staticClass:"line-number"},[s._v("77")]),t("br"),t("span",{staticClass:"line-number"},[s._v("78")]),t("br"),t("span",{staticClass:"line-number"},[s._v("79")]),t("br"),t("span",{staticClass:"line-number"},[s._v("80")]),t("br"),t("span",{staticClass:"line-number"},[s._v("81")]),t("br"),t("span",{staticClass:"line-number"},[s._v("82")]),t("br"),t("span",{staticClass:"line-number"},[s._v("83")]),t("br"),t("span",{staticClass:"line-number"},[s._v("84")]),t("br"),t("span",{staticClass:"line-number"},[s._v("85")]),t("br"),t("span",{staticClass:"line-number"},[s._v("86")]),t("br"),t("span",{staticClass:"line-number"},[s._v("87")]),t("br"),t("span",{staticClass:"line-number"},[s._v("88")]),t("br"),t("span",{staticClass:"line-number"},[s._v("89")]),t("br"),t("span",{staticClass:"line-number"},[s._v("90")]),t("br"),t("span",{staticClass:"line-number"},[s._v("91")]),t("br"),t("span",{staticClass:"line-number"},[s._v("92")]),t("br"),t("span",{staticClass:"line-number"},[s._v("93")]),t("br"),t("span",{staticClass:"line-number"},[s._v("94")]),t("br"),t("span",{staticClass:"line-number"},[s._v("95")]),t("br"),t("span",{staticClass:"line-number"},[s._v("96")]),t("br"),t("span",{staticClass:"line-number"},[s._v("97")]),t("br"),t("span",{staticClass:"line-number"},[s._v("98")]),t("br"),t("span",{staticClass:"line-number"},[s._v("99")]),t("br"),t("span",{staticClass:"line-number"},[s._v("100")]),t("br"),t("span",{staticClass:"line-number"},[s._v("101")]),t("br")])]),t("h1",{attrs:{id:"容器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#容器"}},[s._v("#")]),s._v(" 容器")]),s._v(" "),t("h2",{attrs:{id:"容器回调"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#容器回调"}},[s._v("#")]),s._v(" 容器回调")]),s._v(" "),t("p",[t("strong",[s._v("Kubernetes")]),s._v(" 有两个回调暴露给容器：")]),s._v(" "),t("ul",[t("li",[t("p",[t("strong",[s._v("PostStart")]),s._v("：在容器创建后立即执行。")]),s._v(" "),t("p",[s._v("但是，并不能保证钩子将在容器 ENTRYPOINT 之前运行，因为没有参数传递给处理程序。 主要用于资源部署、环境准备等。不过需要注意的是如果钩子花费时间过长以及于不能运行或者挂起，容器将不能达到 Running 状态。")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("PreStop")]),s._v("：在容器终止前立即被调用。")]),s._v(" "),t("p",[s._v("PreStop 是阻塞的，意味着它是同步的，所以它必须在删除容器的调用出发之前完成。主要用于优雅关闭应用程序、通知其他系统等。如果回调在执行期间挂起，Pod 阶段将停留在 Running 状态并且不会达到 failed 状态。")])])]),s._v(" "),t("p",[s._v("如果 PostStart 或者 PreStop 回调失败，它会杀死容器。所以我们应该让回调函数尽可能的轻量。当然有些情况下，长时间运行命令是合理的，比如在停止容器之前预先保留状态。")]),s._v(" "),t("blockquote",[t("p",[s._v("另外，Hook 调用的日志没有暴露给 Pod 的 Event，所以只能到通过 "),t("code",[s._v("describe")]),s._v(" 命令来获取，如果是正常的操作是不会有 event，如果有错误可以看到 FailedPostStartHook 和 FailedPreStopHook 这种 event。并且如果 Hook 调用出现错误，则 Pod 状态不会是 Running。")])]),s._v(" "),t("h1",{attrs:{id:"pod-探针"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pod-探针"}},[s._v("#")]),s._v(" Pod 探针")]),s._v(" "),t("h2",{attrs:{id:"pod-探针类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pod-探针类型"}},[s._v("#")]),s._v(" Pod 探针类型")]),s._v(" "),t("ul",[t("li",[t("p",[t("strong",[s._v("StartupProbe")]),s._v("：用于判断容器内应用程序是否已经启动。如果配置了startupProbe，就会先禁止其他的探测，直到此探针成功为止，成功后将不再进行探测。")]),s._v(" "),t("p",[s._v("如果启动探测失败，kubelet 会杀死容器，并根据容器重启策略处理。如果没有配置该探针，默认状态为 Success。")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("LivenessProbe")]),s._v("：用于探测容器是否正在运行。")]),s._v(" "),t("p",[s._v("如果探测失败，kubelet 会杀死容器，并根据容器重启策略处理。若没有配置该探针，默认就是 Success。")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("ReadinessProbe")]),s._v("：判断是否准备好为请求提供服务，一般用于探测容器内的程序是否健康。如果探测成功，那么久代表这个容器已经完成启动，并且程序已经是可以接受流量的状态。")]),s._v(" "),t("p",[s._v("若失败，将可匹配上该 Pod 的 Service 的 Endpoint 列表中移除该 Pod 的 IP 地址。初始延迟之前探测状态默认为 Failure。")])])]),s._v(" "),t("h2",{attrs:{id:"pod-探针的检测方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pod-探针的检测方式"}},[s._v("#")]),s._v(" Pod 探针的检测方式")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("ExecAction")]),s._v("：在容器内执行一个命令，如果返回值为 0，则认为容器健康。")]),s._v(" "),t("li",[t("strong",[s._v("TCPSocketAction")]),s._v("：通过 TCP 连接检查容器内的端口是否是通的，如果是通的就认为容器健康。")]),s._v(" "),t("li",[t("strong",[s._v("HTTPGetAction")]),s._v("：通过应用程序暴露的 API 地址来检查程序是否是正常的，如果状态码为 200~400 之间，则认为容器健康。")])]),s._v(" "),t("h2",{attrs:{id:"探针检查参数配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#探针检查参数配置"}},[s._v("#")]),s._v(" 探针检查参数配置")]),s._v(" "),t("ul",[t("li",[s._v("initialDelaySeconds: 60  # 初始化时间")]),s._v(" "),t("li",[s._v("timeoutSeconds: 2        # 检测动作的超时时间")]),s._v(" "),t("li",[s._v("periodSeconds: 5         # 检测间隔")]),s._v(" "),t("li",[s._v("successThreshold: 1        # 检查成功为1次表示就绪")]),s._v(" "),t("li",[s._v("failureThreshold: 2          # 检测失败2次表示未就绪")])]),s._v(" "),t("aside",[s._v(" 💡 流程是先等待 initialDelaySeconds 时间才开始进行周期性检测，直到达到 successThreshold 或者 failureThreshold 的阈值，判定检测是否成功。 每一次检测开始后，得到成功、失败、timeoutSeconds 秒后超时，三种情况后，等待 periodSeconds 秒后再次检测。\n")]),s._v(" "),t("h1",{attrs:{id:"pod-终止流程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pod-终止流程"}},[s._v("#")]),s._v(" Pod 终止流程")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("用户发送命令删除 Pod，Pod 进入Terminating状态")])]),s._v(" "),t("li",[t("p",[s._v("当 kubelet 看到 Pod 已被标记终止，开始执行 Pod 关闭过程")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("如果设置了 preStop 回调，开始执行回调逻辑。如果回调逻辑超过 grace period（默认 30s）还没结束，kubelet 允许一次性宽限 2 秒。")]),s._v(" "),t("blockquote",[t("p",[s._v("如果想保证的 preStop 执行完，须修改 terminationGracePeriodSeconds")])])]),s._v(" "),t("li",[t("p",[s._v("kubelet 控制给容器进程 1 发送 TERM 信号")])])])]),s._v(" "),t("li",[t("p",[s._v("与此同时，Service 摘除 Pod 节点")])]),s._v(" "),t("li",[t("p",[s._v("超出终止宽限期限时，kubelet 会强制关闭容器，然后删除 Pod")])])]),s._v(" "),t("p",[s._v("详细过程可参考官方文档："),t("a",{attrs:{href:"https://kubernetes.io/zh/docs/concepts/workloads/pods/pod-lifecycle/#pod-termination",target:"_blank",rel:"noopener noreferrer"}},[s._v("Pod#Pod 的终止"),t("OutboundLink")],1)]),s._v(" "),t("p",[s._v("Prestop：先去请求 eureka 接口，把自己的IP地址和端口号，进行下线，eureka 从注册表中删除该应用的 IP 地址。然后容器进行 sleep 90；kill "),t("code",[s._v("pgrep java")])]),s._v(" "),t("h1",{attrs:{id:"实践-基于-prestop-的零宕机演示"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实践-基于-prestop-的零宕机演示"}},[s._v("#")]),s._v(" 实践：基于 PreStop 的零宕机演示")]),s._v(" "),t("blockquote",[t("p",[s._v("搬运自文章：****"),t("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/91651478",target:"_blank",rel:"noopener noreferrer"}},[s._v("Kubernetes 优雅停止Pod"),t("OutboundLink")],1),s._v("****")])]),s._v(" "),t("p",[s._v("**起因:**在生产环境中使用spring框架，由于服务更新过程中，服务容器被直接充值，部分请求仍被分发到终止的容器(没有配置钩子，熟悉默认环境)，导致服务出现500错误，这部分错误请求数据占用比较少，因为Pod滚动更新都是一对一。因为部分用户会产生服务器错误的情况，考虑使用优雅的终止方式，将错误请求降到最低，直至滚动更新不影响用户")]),s._v(" "),t("p",[s._v("Eureka是一个基于REST的服务，作为Spring Cloud服务注册中心，用于定位服务来进行中间层服务器的负载均衡和故障转移。各服务启动时，会向Eureka Server注册自己的信息(IP、端口、服务信息等)，Eureka Server会存储这些信息，微服务启动后，会周期性(默认30秒)的向Eureka Server发送心跳以续约自己的租期，并且可以从eureka中获取其他微服务的地址信息，执行相关逻辑")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://pic2.zhimg.com/v2-e05a755d609ef7cbb4ce97f5f40f5035_b.jpg",alt:"https://pic2.zhimg.com/v2-e05a755d609ef7cbb4ce97f5f40f5035_b.jpg"}})]),s._v(" "),t("p",[s._v("由于Eureka默认的心跳检测为30秒，当K8S下线Pod时Eureka会有30秒的异常问题，所以我们需要在Pod 停止前发送一条请求，通知Eureka进行下线操作，这样进行优雅的停止对用户的影响做到最小")]),s._v(" "),t("p",[s._v("具体yaml如下")]),s._v(" "),t("div",{staticClass:"language-yaml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("apiVersion")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" v1\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("kind")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Pod\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("metadata")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" abcdocker\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("labels")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" abcdocker\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("spec")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("containers")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" abcdocker\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" nginx\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ports")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("containerPort")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("lifecycle")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("preStop")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("exec")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n          "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("command")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" bash\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("c\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" 'curl "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("X POST "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("data DOWN <http"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("//127.0.0.1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("8080/service"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("registry/instance"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("status"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v('H\n              "Content'),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("Type")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" application/vnd.spring"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("boot.actuator.v2+json;charset=UTF"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("8\";sleep 30'\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("####### 参数解释 #######")]),s._v("\n127.0.0.1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8080")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#代表eureka地址")]),s._v("\nservice"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("registry    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#代表注册中心")]),s._v("\nDOWN        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#执行down请求")]),s._v("\nsleep       "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#等待30秒")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br")])]),t("p",[s._v("当我们删除 Pod 的时候就会执行上面的命令操作，并且等待30秒")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@yzsjhl82-135 yaml"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# kubectl get pod")]),s._v("\nNAME        READY   STATUS    RESTARTS   AGE\nabcdocker   "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("          2m16s\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@yzsjhl82-135 yaml"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# kubectl delete pod abcdocker")]),s._v("\npod "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"abcdocker"')]),s._v(" deleted\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#此刻Pod不会马上删除，而是执行Exec中的命令，并等待30秒")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[s._v("配置中添加了一个 sleep 时间，主要是作为服务停止的缓冲时间")]),s._v(" "),t("h1",{attrs:{id:"附录-相关官方文档"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#附录-相关官方文档"}},[s._v("#")]),s._v(" 附录：相关官方文档")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://kubernetes.io/zh/docs/concepts/containers/container-lifecycle-hooks/",target:"_blank",rel:"noopener noreferrer"}},[s._v("容器生命周期回调"),t("OutboundLink")],1)]),s._v(" "),t("li",[t("a",{attrs:{href:"https://kubernetes.io/zh/docs/tasks/configure-pod-container/attach-handler-lifecycle-event/",target:"_blank",rel:"noopener noreferrer"}},[s._v("为容器的生命周期事件设置处理函数"),t("OutboundLink")],1)]),s._v(" "),t("li",[t("a",{attrs:{href:"https://kubernetes.io/zh/docs/concepts/workloads/pods/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Pods"),t("OutboundLink")],1)]),s._v(" "),t("li",[t("a",{attrs:{href:"https://kubernetes.io/zh/docs/concepts/workloads/pods/pod-lifecycle/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Pod 的生命周期"),t("OutboundLink")],1)]),s._v(" "),t("li",[t("a",{attrs:{href:"https://kubernetes.io/zh/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/",target:"_blank",rel:"noopener noreferrer"}},[s._v("配置存活、就绪和启动探测器"),t("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=e.exports}}]);